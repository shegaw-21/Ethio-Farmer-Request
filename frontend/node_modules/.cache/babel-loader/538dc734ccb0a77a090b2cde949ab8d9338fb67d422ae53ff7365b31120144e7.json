{"ast":null,"code":"var _jsxFileName = \"D:\\\\FARMERS\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FederalDashboard from './dashboards/FederalDashboard';\nimport RegionDashboard from './dashboards/RegionDashboard';\nimport ZoneDashboard from './dashboards/ZoneDashboard';\nimport WoredaDashboard from './dashboards/WoredaDashboard';\nimport KebeleDashboard from './dashboards/KebeleDashboard';\nimport FarmerDashboard from './dashboards/FarmerDashboard';\nimport ProductList from './pages/ProductList';\nimport RequestsPage from './pages/RequestsPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [requests, setRequests] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [currentPage, setCurrentPage] = useState('dashboard');\n\n  // ====== Login ======\n  const handleLogin = async (phone, password) => {\n    try {\n      const res = await api.post('/auth/login', {\n        phone,\n        password\n      });\n      setCurrentUser(res.data.user);\n      setCurrentPage('dashboard');\n    } catch (err) {\n      let errorMessage = 'Unknown error';\n      if (err.response && err.response.data && err.response.data.message) {\n        errorMessage = err.response.data.message;\n      } else if (err.message) {\n        errorMessage = err.message;\n      }\n      alert('Login failed: ' + errorMessage);\n    }\n  };\n\n  // ====== Fetch initial data ======\n  useEffect(() => {\n    if (!currentUser) return;\n    fetchProducts();\n    fetchRequests();\n  }, [currentUser]);\n  const fetchProducts = async () => {\n    try {\n      const res = await api.get('/products');\n      setProducts(res.data);\n      setFilteredProducts(res.data);\n    } catch (err) {\n      console.error('Error fetching products:', err);\n    }\n  };\n  const fetchRequests = async () => {\n    try {\n      const res = await api.get('/requests');\n      setRequests(res.data);\n    } catch (err) {\n      console.error('Error fetching requests:', err);\n    }\n  };\n\n  // ====== Filter requests by role ======\n  const getFilteredRequests = (user, allRequests) => {\n    if (!user) return [];\n    // Example filtering logic (adjust for your hierarchy)\n    switch (user.role) {\n      case 'Federal':\n        return allRequests;\n      case 'Region':\n        return allRequests.filter(r => r.regionId === user.regionId);\n      case 'Zone':\n        return allRequests.filter(r => r.zoneId === user.zoneId);\n      case 'Woreda':\n        return allRequests.filter(r => r.woredaId === user.woredaId);\n      case 'Kebele':\n        return allRequests.filter(r => r.kebeleId === user.kebeleId);\n      case 'Farmer':\n        return allRequests.filter(r => r.farmerId === user.id);\n      default:\n        return [];\n    }\n  };\n\n  // ====== Handle product request ======\n  const handleProductRequest = async (productId, quantity) => {\n    try {\n      await api.post('/requests', {\n        productId,\n        quantity\n      });\n      fetchRequests();\n    } catch (err) {\n      console.error('Error requesting product:', err);\n    }\n  };\n\n  // ====== Handle request approval ======\n  const handleRequestApproval = async (requestId, status) => {\n    try {\n      await api.patch(`/requests/${requestId}`, {\n        status\n      });\n      fetchRequests();\n    } catch (err) {\n      console.error('Error approving request:', err);\n    }\n  };\n\n  // ====== Render main content ======\n  const renderMainContent = () => {\n    if (currentPage === 'dashboard') {\n      switch (currentUser.role) {\n        case 'Federal':\n          return /*#__PURE__*/_jsxDEV(FederalDashboard, {\n            requests: getFilteredRequests(currentUser, requests),\n            currentUser: currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 28\n          }, this);\n        case 'Region':\n          return /*#__PURE__*/_jsxDEV(RegionDashboard, {\n            requests: getFilteredRequests(currentUser, requests),\n            currentUser: currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 28\n          }, this);\n        case 'Zone':\n          return /*#__PURE__*/_jsxDEV(ZoneDashboard, {\n            requests: getFilteredRequests(currentUser, requests),\n            currentUser: currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 28\n          }, this);\n        case 'Woreda':\n          return /*#__PURE__*/_jsxDEV(WoredaDashboard, {\n            requests: getFilteredRequests(currentUser, requests),\n            currentUser: currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 28\n          }, this);\n        case 'Kebele':\n          return /*#__PURE__*/_jsxDEV(KebeleDashboard, {\n            requests: getFilteredRequests(currentUser, requests),\n            currentUser: currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 28\n          }, this);\n        case 'Farmer':\n          return /*#__PURE__*/_jsxDEV(FarmerDashboard, {\n            currentUser: currentUser,\n            products: filteredProducts,\n            requests: getFilteredRequests(currentUser, requests),\n            onRequest: handleProductRequest\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 28\n          }, this);\n        default:\n          return null;\n      }\n    }\n    if (currentPage === 'products') {\n      return /*#__PURE__*/_jsxDEV(ProductList, {\n        products: filteredProducts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 20\n      }, this);\n    }\n    if (currentPage === 'requests') {\n      return /*#__PURE__*/_jsxDEV(RequestsPage, {\n        requests: getFilteredRequests(currentUser, requests),\n        currentUser: currentUser,\n        onApprove: handleRequestApproval\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 20\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", !currentUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Login \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), \" \", / * Replace with your login form * /, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }, this) : renderMainContent(), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 14\n  }, this);\n}\n_s(App, \"tMsjyNp3m/2vYYbNYqvBfsVy1mo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FederalDashboard","RegionDashboard","ZoneDashboard","WoredaDashboard","KebeleDashboard","FarmerDashboard","ProductList","RequestsPage","jsxDEV","_jsxDEV","App","_s","currentUser","setCurrentUser","requests","setRequests","products","setProducts","filteredProducts","setFilteredProducts","currentPage","setCurrentPage","handleLogin","phone","password","res","api","post","data","user","err","errorMessage","response","message","alert","fetchProducts","fetchRequests","get","console","error","getFilteredRequests","allRequests","role","filter","r","regionId","zoneId","woredaId","kebeleId","farmerId","id","handleProductRequest","productId","quantity","handleRequestApproval","requestId","status","patch","renderMainContent","fileName","_jsxFileName","lineNumber","columnNumber","onRequest","onApprove","children","_c","$RefreshReg$"],"sources":["D:/FARMERS/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport FederalDashboard from './dashboards/FederalDashboard';\r\nimport RegionDashboard from './dashboards/RegionDashboard';\r\nimport ZoneDashboard from './dashboards/ZoneDashboard';\r\nimport WoredaDashboard from './dashboards/WoredaDashboard';\r\nimport KebeleDashboard from './dashboards/KebeleDashboard';\r\nimport FarmerDashboard from './dashboards/FarmerDashboard';\r\nimport ProductList from './pages/ProductList';\r\nimport RequestsPage from './pages/RequestsPage';\r\n\r\nfunction App() {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [requests, setRequests] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [filteredProducts, setFilteredProducts] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState('dashboard');\r\n\r\n    // ====== Login ======\r\n    const handleLogin = async(phone, password) => {\r\n        try {\r\n            const res = await api.post('/auth/login', { phone, password });\r\n            setCurrentUser(res.data.user);\r\n            setCurrentPage('dashboard');\r\n        } catch (err) {\r\n            let errorMessage = 'Unknown error';\r\n            if (err.response && err.response.data && err.response.data.message) {\r\n                errorMessage = err.response.data.message;\r\n            } else if (err.message) {\r\n                errorMessage = err.message;\r\n            }\r\n            alert('Login failed: ' + errorMessage);\r\n        }\r\n    };\r\n\r\n    // ====== Fetch initial data ======\r\n    useEffect(() => {\r\n        if (!currentUser) return;\r\n        fetchProducts();\r\n        fetchRequests();\r\n    }, [currentUser]);\r\n\r\n    const fetchProducts = async() => {\r\n        try {\r\n            const res = await api.get('/products');\r\n            setProducts(res.data);\r\n            setFilteredProducts(res.data);\r\n        } catch (err) {\r\n            console.error('Error fetching products:', err);\r\n        }\r\n    };\r\n\r\n    const fetchRequests = async() => {\r\n        try {\r\n            const res = await api.get('/requests');\r\n            setRequests(res.data);\r\n        } catch (err) {\r\n            console.error('Error fetching requests:', err);\r\n        }\r\n    };\r\n\r\n    // ====== Filter requests by role ======\r\n    const getFilteredRequests = (user, allRequests) => {\r\n        if (!user) return [];\r\n        // Example filtering logic (adjust for your hierarchy)\r\n        switch (user.role) {\r\n            case 'Federal':\r\n                return allRequests;\r\n            case 'Region':\r\n                return allRequests.filter(r => r.regionId === user.regionId);\r\n            case 'Zone':\r\n                return allRequests.filter(r => r.zoneId === user.zoneId);\r\n            case 'Woreda':\r\n                return allRequests.filter(r => r.woredaId === user.woredaId);\r\n            case 'Kebele':\r\n                return allRequests.filter(r => r.kebeleId === user.kebeleId);\r\n            case 'Farmer':\r\n                return allRequests.filter(r => r.farmerId === user.id);\r\n            default:\r\n                return [];\r\n        }\r\n    };\r\n\r\n    // ====== Handle product request ======\r\n    const handleProductRequest = async(productId, quantity) => {\r\n        try {\r\n            await api.post('/requests', { productId, quantity });\r\n            fetchRequests();\r\n        } catch (err) {\r\n            console.error('Error requesting product:', err);\r\n        }\r\n    };\r\n\r\n    // ====== Handle request approval ======\r\n    const handleRequestApproval = async(requestId, status) => {\r\n        try {\r\n            await api.patch(`/requests/${requestId}`, { status });\r\n            fetchRequests();\r\n        } catch (err) {\r\n            console.error('Error approving request:', err);\r\n        }\r\n    };\r\n\r\n    // ====== Render main content ======\r\n    const renderMainContent = () => {\r\n        if (currentPage === 'dashboard') {\r\n            switch (currentUser.role) {\r\n                case 'Federal':\r\n                    return <FederalDashboard requests = { getFilteredRequests(currentUser, requests) }\r\n                    currentUser = { currentUser }\r\n                    />;\r\n                case 'Region':\r\n                    return <RegionDashboard requests = { getFilteredRequests(currentUser, requests) }\r\n                    currentUser = { currentUser }\r\n                    />;\r\n                case 'Zone':\r\n                    return <ZoneDashboard requests = { getFilteredRequests(currentUser, requests) }\r\n                    currentUser = { currentUser }\r\n                    />;\r\n                case 'Woreda':\r\n                    return <WoredaDashboard requests = { getFilteredRequests(currentUser, requests) }\r\n                    currentUser = { currentUser }\r\n                    />;\r\n                case 'Kebele':\r\n                    return <KebeleDashboard requests = { getFilteredRequests(currentUser, requests) }\r\n                    currentUser = { currentUser }\r\n                    />;\r\n                case 'Farmer':\r\n                    return <FarmerDashboard currentUser = { currentUser }\r\n                    products = { filteredProducts }\r\n                    requests = { getFilteredRequests(currentUser, requests) }\r\n                    onRequest = { handleProductRequest }\r\n                    />;\r\n                default:\r\n                    return null;\r\n            }\r\n        }\r\n\r\n        if (currentPage === 'products') {\r\n            return <ProductList products = { filteredProducts }\r\n            />;\r\n        }\r\n\r\n        if (currentPage === 'requests') {\r\n            return <RequestsPage requests = { getFilteredRequests(currentUser, requests) }\r\n            currentUser = { currentUser }\r\n            onApprove = { handleRequestApproval }\r\n            />;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    return ( <\r\n        div > {!currentUser ? ( <\r\n                div >\r\n                <\r\n                h2 > Login < /h2> { / * Replace with your login form * / } < /\r\n                div >\r\n            ) : (\r\n                renderMainContent()\r\n            )\r\n        } <\r\n        /div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}