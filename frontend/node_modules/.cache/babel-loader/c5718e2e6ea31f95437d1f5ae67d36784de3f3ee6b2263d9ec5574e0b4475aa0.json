{"ast":null,"code":"var _jsxFileName = \"D:\\\\FARMERS\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport Dashboard from './components/Dashboard';\nimport RequestsTable from './components/RequestsTable';\nimport ApprovalForm from './components/ApprovalForm';\nimport LoginPage from './components/LoginPage';\nimport MasterData from './components/MasterData';\nimport { adminRoles, pageNames } from './constants';\n\n// Firebase imports\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInAnonymously, signInWithCustomToken, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, collection, onSnapshot, doc, setDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State for user authentication and role\n  const [user, setUser] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [isAuthReady, setIsAuthReady] = useState(false);\n\n  // State for current page navigation\n  const [currentPage, setCurrentPage] = useState(pageNames.DASHBOARD);\n\n  // State for a selected request for viewing/approving\n  const [selectedRequest, setSelectedRequest] = useState(null);\n\n  // State for requests fetched from Firestore\n  const [requests, setRequests] = useState([]);\n\n  // Firebase instances\n  const [db, setDb] = useState(null);\n  const [auth, setAuth] = useState(null);\n\n  // Initializing Firebase and authentication\n  useEffect(() => {\n    console.log(\"Starting Firebase initialization...\");\n    try {\n      // eslint-disable-next-line no-undef\n      const firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : {};\n      // eslint-disable-next-line no-undef\n      const initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\n      console.log(\"Firebase config:\", firebaseConfig);\n      console.log(\"Initial auth token:\", initialAuthToken);\n      const app = initializeApp(firebaseConfig);\n      const newDb = getFirestore(app);\n      const newAuth = getAuth(app);\n      setDb(newDb);\n      setAuth(newAuth);\n      const authListener = onAuthStateChanged(newAuth, async authUser => {\n        if (authUser) {\n          console.log(\"User signed in:\", authUser.uid);\n          setUserId(authUser.uid);\n          setUser({\n            role: adminRoles.FEDERAL,\n            name: 'Admin User'\n          }); // Mock role for now\n        } else {\n          console.log(\"No user signed in. Attempting sign-in...\");\n          try {\n            if (initialAuthToken) {\n              await signInWithCustomToken(newAuth, initialAuthToken);\n              console.log(\"Signed in with custom token.\");\n            } else {\n              await signInAnonymously(newAuth);\n              console.log(\"Signed in anonymously.\");\n            }\n          } catch (error) {\n            console.error(\"Error during sign-in:\", error);\n            // Fallback to avoid infinite loading\n            setIsAuthReady(true);\n            return;\n          }\n        }\n        setIsAuthReady(true);\n      });\n      return () => {\n        console.log(\"Cleaning up auth listener.\");\n        authListener();\n      };\n    } catch (error) {\n      console.error(\"Error initializing Firebase:\", error);\n      setIsAuthReady(true); // Ensure app doesn't get stuck if init fails\n    }\n  }, []);\n\n  // Real-time data fetching from Firestore\n  useEffect(() => {\n    if (!db || !userId || !isAuthReady) return;\n    console.log(\"Setting up Firestore listener for userId:\", userId);\n\n    // eslint-disable-next-line no-undef\n    const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\n    const privateRequestsPath = `artifacts/${appId}/users/${userId}/requests`;\n\n    // Set up a real-time listener for the requests collection\n    const unsub = onSnapshot(collection(db, privateRequestsPath), snapshot => {\n      const fetchedRequests = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setRequests(fetchedRequests);\n      console.log(\"Fetched requests:\", fetchedRequests);\n    }, error => {\n      console.error(\"Error fetching requests:\", error);\n    });\n\n    // Cleanup the listener on component unmount\n    return () => {\n      console.log(\"Cleaning up Firestore listener.\");\n      unsub();\n    };\n  }, [db, userId, isAuthReady]);\n  const handleLogin = (username, password, role) => {\n    console.log(`Login attempted with username: ${username}, role: ${role}`);\n    // Here you would normally verify credentials with a backend or a user management service\n    // For this example, we'll use hardcoded credentials\n    if (username === 'shegaw' && password === 'shegaw123') {\n      console.log(\"Login successful!\");\n      // For now, we'll just set a mock user with the selected role and bypass Firebase authentication\n      // In a real app, you would sign in the user and get their UID\n      setUser({\n        role: role,\n        name: username\n      });\n    } else {\n      console.log(\"Login failed: Invalid credentials.\");\n      // Using a custom modal or message box instead of alert()\n      const errorMessage = 'Invalid username or password.';\n      console.error(errorMessage);\n      // In a real app, you'd show a UI message\n    }\n  };\n  const handleLogout = async () => {\n    if (auth) {\n      try {\n        await auth.signOut();\n        setUser(null);\n        setUserId(null);\n        setCurrentPage(pageNames.DASHBOARD);\n      } catch (error) {\n        console.error(\"Error signing out:\", error);\n      }\n    }\n  };\n  const handleViewRequest = request => {\n    setSelectedRequest(request);\n    setCurrentPage(pageNames.APPROVALS);\n  };\n  const handleApproveReject = async (action, feedback) => {\n    // This is where you would update the document in Firestore\n    if (!db || !selectedRequest || !userId) return;\n    try {\n      // eslint-disable-next-line no-undef\n      const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\n      const requestDocRef = doc(db, `artifacts/${appId}/users/${userId}/requests`, selectedRequest.id);\n      await setDoc(requestDocRef, {\n        ...selectedRequest,\n        status: action === 'Approve' ? 'Approved' : 'Rejected',\n        feedback: feedback\n      }, {\n        merge: true\n      });\n\n      // Using a custom modal instead of alert\n      console.log('Request processed successfully!');\n      setSelectedRequest(null);\n      setCurrentPage(pageNames.DASHBOARD);\n    } catch (error) {\n      console.error(\"Error updating document:\", error);\n    }\n  };\n  const renderContent = () => {\n    if (!isAuthReady) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center p-8 text-xl text-gray-500\",\n        children: \" Authenticating...Please check the console for status. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 20\n      }, this);\n    }\n    if (!user) {\n      return /*#__PURE__*/_jsxDEV(LoginPage, {\n        onLogin: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 20\n      }, this);\n    }\n    if (selectedRequest && currentPage === pageNames.APPROVALS) {\n      return /*#__PURE__*/_jsxDEV(ApprovalForm, {\n        request: selectedRequest,\n        onBack: () => setCurrentPage(pageNames.DASHBOARD),\n        onSubmit: handleApproveReject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 22\n      }, this);\n    }\n    switch (currentPage) {\n      case pageNames.DASHBOARD:\n        return /*#__PURE__*/_jsxDEV(Dashboard, {\n          user: user,\n          requests: requests,\n          userId: userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 24\n        }, this);\n      case pageNames.REQUESTS:\n        return /*#__PURE__*/_jsxDEV(RequestsTable, {\n          requests: requests,\n          onViewRequest: handleViewRequest\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 24\n        }, this);\n      case pageNames.MASTER_DATA:\n        return /*#__PURE__*/_jsxDEV(MasterData, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 24\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Dashboard, {\n          user: user,\n          requests: requests,\n          userId: userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 min-h-screen font-sans antialiased text-gray-800 flex\",\n    children: [\" \", user && /*#__PURE__*/_jsxDEV(Sidebar, {\n      userRole: user.role,\n      currentPage: currentPage,\n      onNavigate: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1\",\n      children: [\" \", user && /*#__PURE__*/_jsxDEV(Header, {\n        user: user,\n        onLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 29\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"container mx-auto p-4 md:p-8\",\n        children: [\" \", renderContent(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 14\n  }, this);\n}\n_s(App, \"IynOTQox40DH8XOSM0zSluDBlNc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Sidebar","Dashboard","RequestsTable","ApprovalForm","LoginPage","MasterData","adminRoles","pageNames","initializeApp","getAuth","signInAnonymously","signInWithCustomToken","onAuthStateChanged","getFirestore","collection","onSnapshot","doc","setDoc","jsxDEV","_jsxDEV","App","_s","user","setUser","userId","setUserId","isAuthReady","setIsAuthReady","currentPage","setCurrentPage","DASHBOARD","selectedRequest","setSelectedRequest","requests","setRequests","db","setDb","auth","setAuth","console","log","firebaseConfig","__firebase_config","JSON","parse","initialAuthToken","__initial_auth_token","app","newDb","newAuth","authListener","authUser","uid","role","FEDERAL","name","error","appId","__app_id","privateRequestsPath","unsub","snapshot","fetchedRequests","docs","map","id","data","handleLogin","username","password","errorMessage","handleLogout","signOut","handleViewRequest","request","APPROVALS","handleApproveReject","action","feedback","requestDocRef","status","merge","renderContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onBack","onSubmit","REQUESTS","onViewRequest","MASTER_DATA","userRole","onNavigate","onLogout","_c","$RefreshReg$"],"sources":["D:/FARMERS/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport Dashboard from './components/Dashboard';\nimport RequestsTable from './components/RequestsTable';\nimport ApprovalForm from './components/ApprovalForm';\nimport LoginPage from './components/LoginPage';\nimport MasterData from './components/MasterData';\nimport { adminRoles, pageNames } from './constants';\n\n// Firebase imports\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInAnonymously, signInWithCustomToken, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, collection, onSnapshot, doc, setDoc } from 'firebase/firestore';\n\nfunction App() {\n    // State for user authentication and role\n    const [user, setUser] = useState(null);\n    const [userId, setUserId] = useState(null);\n    const [isAuthReady, setIsAuthReady] = useState(false);\n\n    // State for current page navigation\n    const [currentPage, setCurrentPage] = useState(pageNames.DASHBOARD);\n\n    // State for a selected request for viewing/approving\n    const [selectedRequest, setSelectedRequest] = useState(null);\n\n    // State for requests fetched from Firestore\n    const [requests, setRequests] = useState([]);\n\n    // Firebase instances\n    const [db, setDb] = useState(null);\n    const [auth, setAuth] = useState(null);\n\n    // Initializing Firebase and authentication\n    useEffect(() => {\n        console.log(\"Starting Firebase initialization...\");\n        try {\n            // eslint-disable-next-line no-undef\n            const firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : {};\n            // eslint-disable-next-line no-undef\n            const initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\n\n            console.log(\"Firebase config:\", firebaseConfig);\n            console.log(\"Initial auth token:\", initialAuthToken);\n\n            const app = initializeApp(firebaseConfig);\n            const newDb = getFirestore(app);\n            const newAuth = getAuth(app);\n            setDb(newDb);\n            setAuth(newAuth);\n\n            const authListener = onAuthStateChanged(newAuth, async(authUser) => {\n                if (authUser) {\n                    console.log(\"User signed in:\", authUser.uid);\n                    setUserId(authUser.uid);\n                    setUser({ role: adminRoles.FEDERAL, name: 'Admin User' }); // Mock role for now\n                } else {\n                    console.log(\"No user signed in. Attempting sign-in...\");\n                    try {\n                        if (initialAuthToken) {\n                            await signInWithCustomToken(newAuth, initialAuthToken);\n                            console.log(\"Signed in with custom token.\");\n                        } else {\n                            await signInAnonymously(newAuth);\n                            console.log(\"Signed in anonymously.\");\n                        }\n                    } catch (error) {\n                        console.error(\"Error during sign-in:\", error);\n                        // Fallback to avoid infinite loading\n                        setIsAuthReady(true);\n                        return;\n                    }\n                }\n                setIsAuthReady(true);\n            });\n\n            return () => {\n                console.log(\"Cleaning up auth listener.\");\n                authListener();\n            };\n        } catch (error) {\n            console.error(\"Error initializing Firebase:\", error);\n            setIsAuthReady(true); // Ensure app doesn't get stuck if init fails\n        }\n    }, []);\n\n    // Real-time data fetching from Firestore\n    useEffect(() => {\n        if (!db || !userId || !isAuthReady) return;\n\n        console.log(\"Setting up Firestore listener for userId:\", userId);\n\n        // eslint-disable-next-line no-undef\n        const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\n        const privateRequestsPath = `artifacts/${appId}/users/${userId}/requests`;\n\n        // Set up a real-time listener for the requests collection\n        const unsub = onSnapshot(collection(db, privateRequestsPath), (snapshot) => {\n            const fetchedRequests = snapshot.docs.map(doc => ({\n                id: doc.id,\n                ...doc.data()\n            }));\n            setRequests(fetchedRequests);\n            console.log(\"Fetched requests:\", fetchedRequests);\n        }, (error) => {\n            console.error(\"Error fetching requests:\", error);\n        });\n\n        // Cleanup the listener on component unmount\n        return () => {\n            console.log(\"Cleaning up Firestore listener.\");\n            unsub();\n        }\n    }, [db, userId, isAuthReady]);\n\n\n    const handleLogin = (username, password, role) => {\n        console.log(`Login attempted with username: ${username}, role: ${role}`);\n        // Here you would normally verify credentials with a backend or a user management service\n        // For this example, we'll use hardcoded credentials\n        if (username === 'shegaw' && password === 'shegaw123') {\n            console.log(\"Login successful!\");\n            // For now, we'll just set a mock user with the selected role and bypass Firebase authentication\n            // In a real app, you would sign in the user and get their UID\n            setUser({ role: role, name: username });\n        } else {\n            console.log(\"Login failed: Invalid credentials.\");\n            // Using a custom modal or message box instead of alert()\n            const errorMessage = 'Invalid username or password.';\n            console.error(errorMessage);\n            // In a real app, you'd show a UI message\n        }\n    };\n\n    const handleLogout = async() => {\n        if (auth) {\n            try {\n                await auth.signOut();\n                setUser(null);\n                setUserId(null);\n                setCurrentPage(pageNames.DASHBOARD);\n            } catch (error) {\n                console.error(\"Error signing out:\", error);\n            }\n        }\n    };\n\n    const handleViewRequest = (request) => {\n        setSelectedRequest(request);\n        setCurrentPage(pageNames.APPROVALS);\n    };\n\n    const handleApproveReject = async(action, feedback) => {\n        // This is where you would update the document in Firestore\n        if (!db || !selectedRequest || !userId) return;\n\n        try {\n            // eslint-disable-next-line no-undef\n            const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\n            const requestDocRef = doc(db, `artifacts/${appId}/users/${userId}/requests`, selectedRequest.id);\n\n            await setDoc(requestDocRef, {\n                ...selectedRequest,\n                status: action === 'Approve' ? 'Approved' : 'Rejected',\n                feedback: feedback\n            }, { merge: true });\n\n            // Using a custom modal instead of alert\n            console.log('Request processed successfully!');\n            setSelectedRequest(null);\n            setCurrentPage(pageNames.DASHBOARD);\n        } catch (error) {\n            console.error(\"Error updating document:\", error);\n        }\n    };\n\n    const renderContent = () => {\n        if (!isAuthReady) {\n            return <div className = \"text-center p-8 text-xl text-gray-500\" > Authenticating...Please check the console\n            for status. < /div>;\n        }\n\n        if (!user) {\n            return <LoginPage onLogin = { handleLogin }\n            />;\n        }\n\n        if (selectedRequest && currentPage === pageNames.APPROVALS) {\n            return ( <\n                ApprovalForm request = { selectedRequest }\n                onBack = {\n                    () => setCurrentPage(pageNames.DASHBOARD)\n                }\n                onSubmit = { handleApproveReject }\n                />\n            );\n        }\n\n        switch (currentPage) {\n            case pageNames.DASHBOARD:\n                return <Dashboard user = { user }\n                requests = { requests }\n                userId = { userId }\n                />;\n            case pageNames.REQUESTS:\n                return <RequestsTable requests = { requests }\n                onViewRequest = { handleViewRequest }\n                />;\n            case pageNames.MASTER_DATA:\n                return <MasterData user = { user }\n                />;\n            default:\n                return <Dashboard user = { user }\n                requests = { requests }\n                userId = { userId }\n                />;\n        }\n    };\n\n    return ( <\n            div className = \"bg-gray-100 min-h-screen font-sans antialiased text-gray-800 flex\" > {\n                user && < Sidebar userRole = { user.role }\n                currentPage = { currentPage }\n                onNavigate = { setCurrentPage }\n                />} <\n                div className = \"flex-1\" > {\n                    user && < Header user = { user }\n                    onLogout = { handleLogout }\n                    />} <\n                    main className = \"container mx-auto p-4 md:p-8\" > { renderContent() } <\n                    /main> < /\n                    div > <\n                    /div>\n                );\n            }\n\n            export default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}