{"ast":null,"code":"var _jsxFileName = \"D:\\\\FARMERS\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport Dashboard from './components/Dashboard';\nimport RequestsTable from './components/RequestsTable';\nimport ApprovalForm from './components/ApprovalForm';\nimport LoginPage from './components/LoginPage';\nimport MasterData from './components/MasterData';\nimport ReportsPage from './components/ReportsPage';\nimport { adminRoles, pageNames } from './constants';\n\n// Firebase imports\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInAnonymously, signInWithCustomToken, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, collection, onSnapshot, doc, setDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State for user authentication and role\n  const [user, setUser] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [isAuthReady, setIsAuthReady] = useState(false);\n\n  // State for current page navigation\n  const [currentPage, setCurrentPage] = useState(pageNames.DASHBOARD);\n\n  // State for a selected request for viewing/approving\n  const [selectedRequest, setSelectedRequest] = useState(null);\n\n  // State for requests fetched from Firestore\n  const [requests, setRequests] = useState([]);\n\n  // New state for UI features\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  // Firebase instances\n  const [db, setDb] = useState(null);\n  const [auth, setAuth] = useState(null);\n\n  // Function to toggle sidebar\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n\n  // Function to toggle dark mode\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  // Initializing Firebase and authentication\n  useEffect(() => {\n    console.log(\"Starting Firebase initialization...\");\n    try {\n      // eslint-disable-next-line no-undef\n      const firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : {};\n      // eslint-disable-next-line no-undef\n      const initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\n      const app = initializeApp(firebaseConfig);\n      const newDb = getFirestore(app);\n      const newAuth = getAuth(app);\n      setDb(newDb);\n      setAuth(newAuth);\n      const authListener = onAuthStateChanged(newAuth, async authUser => {\n        if (authUser) {\n          console.log(\"User signed in:\", authUser.uid);\n          setUserId(authUser.uid);\n          // NOTE: In a real app, you would fetch the user's role from a database here\n          setUser({\n            role: adminRoles.FEDERAL,\n            name: 'Admin User'\n          });\n        } else {\n          console.log(\"No user signed in. Attempting sign-in...\");\n          try {\n            if (initialAuthToken) {\n              await signInWithCustomToken(newAuth, initialAuthToken);\n            } else {\n              await signInAnonymously(newAuth);\n            }\n          } catch (error) {\n            console.error(\"Error during sign-in:\", error);\n          }\n        }\n        setIsAuthReady(true);\n      });\n      return () => {\n        authListener();\n      };\n    } catch (error) {\n      console.error(\"Error initializing Firebase:\", error);\n      setIsAuthReady(true);\n    }\n  }, []);\n\n  // Real-time data fetching from Firestore\n  useEffect(() => {\n    if (!db || !userId || !isAuthReady) return;\n\n    // eslint-disable-next-line no-undef\n    const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\n    const privateRequestsPath = `artifacts/${appId}/users/${userId}/requests`;\n    const unsub = onSnapshot(collection(db, privateRequestsPath), snapshot => {\n      const fetchedRequests = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setRequests(fetchedRequests);\n    }, error => {\n      console.error(\"Error fetching requests:\", error);\n    });\n    return () => {\n      unsub();\n    };\n  }, [db, userId, isAuthReady]);\n  const handleLogin = (username, password, role) => {\n    if (username === 'shegaw' && password === 'shegaw123' && role === adminRoles.FEDERAL) {\n      setUser({\n        role: role,\n        name: username\n      });\n    } else {\n      console.error('Invalid username, password, or role.');\n    }\n  };\n  const handleLogout = async () => {\n    if (auth) {\n      try {\n        await auth.signOut();\n        setUser(null);\n        setUserId(null);\n        setCurrentPage(pageNames.DASHBOARD);\n      } catch (error) {\n        console.error(\"Error signing out:\", error);\n      }\n    }\n  };\n  const handleViewRequest = request => {\n    setSelectedRequest(request);\n    setCurrentPage(pageNames.APPROVALS);\n  };\n  const handleApproveReject = async (action, feedback) => {\n    if (!db || !selectedRequest || !userId) return;\n    try {\n      // eslint-disable-next-line no-undef\n      const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\n      const requestDocRef = doc(db, `artifacts/${appId}/users/${userId}/requests`, selectedRequest.id);\n      await setDoc(requestDocRef, {\n        ...selectedRequest,\n        status: action === 'Approve' ? 'Approved' : 'Rejected',\n        feedback: feedback\n      }, {\n        merge: true\n      });\n      setSelectedRequest(null);\n      setCurrentPage(pageNames.DASHBOARD);\n    } catch (error) {\n      console.error(\"Error updating document:\", error);\n    }\n  };\n  const renderContent = () => {\n    if (!isAuthReady) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center p-8 text-xl text-gray-500 dark:text-gray-400\",\n        children: \" Authenticating... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 20\n      }, this);\n    }\n    if (!user) {\n      return /*#__PURE__*/_jsxDEV(LoginPage, {\n        onLogin: handleLogin,\n        isDarkMode: isDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 20\n      }, this);\n    }\n    if (selectedRequest && currentPage === pageNames.APPROVALS) {\n      return /*#__PURE__*/_jsxDEV(ApprovalForm, {\n        request: selectedRequest,\n        onBack: () => setCurrentPage(pageNames.REQUESTS),\n        onSubmit: handleApproveReject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 22\n      }, this);\n    }\n    switch (currentPage) {\n      case pageNames.DASHBOARD:\n        return /*#__PURE__*/_jsxDEV(Dashboard, {\n          user: user,\n          requests: requests,\n          userId: userId,\n          isDarkMode: isDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 24\n        }, this);\n      case pageNames.REQUESTS:\n        return /*#__PURE__*/_jsxDEV(RequestsTable, {\n          requests: requests,\n          onViewRequest: handleViewRequest,\n          isDarkMode: isDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 24\n        }, this);\n      case pageNames.MASTER_DATA:\n        return /*#__PURE__*/_jsxDEV(MasterData, {\n          user: user,\n          isDarkMode: isDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 24\n        }, this);\n      case pageNames.REPORTS:\n        return /*#__PURE__*/_jsxDEV(ReportsPage, {\n          user: user,\n          isDarkMode: isDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 24\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Dashboard, {\n          user: user,\n          requests: requests,\n          userId: userId,\n          isDarkMode: isDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${isDarkMode ? 'dark' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-100 dark:bg-gray-900 min-h-screen font-sans antialiased text-gray-800 dark:text-gray-200 flex\",\n      children: [\" \", user && /*#__PURE__*/_jsxDEV(Sidebar, {\n        userRole: user.role,\n        currentPage: currentPage,\n        onNavigate: setCurrentPage,\n        isSidebarOpen: isSidebarOpen,\n        toggleSidebar: toggleSidebar,\n        isDarkMode: isDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 25\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex-1 transition-all duration-300 ${isSidebarOpen ? 'ml-64' : 'ml-20'}`,\n        children: [\" \", user && /*#__PURE__*/_jsxDEV(Header, {\n          user: user,\n          onLogout: handleLogout,\n          isSidebarOpen: isSidebarOpen,\n          toggleSidebar: toggleSidebar,\n          isDarkMode: isDarkMode,\n          toggleDarkMode: toggleDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 29\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"container mx-auto p-4 md:p-8\",\n          children: [\" \", renderContent(), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 14\n  }, this);\n}\n_s(App, \"qn3+zJTv8/AZAY5J7FpGNvoH4PM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Sidebar","Dashboard","RequestsTable","ApprovalForm","LoginPage","MasterData","ReportsPage","adminRoles","pageNames","initializeApp","getAuth","signInAnonymously","signInWithCustomToken","onAuthStateChanged","getFirestore","collection","onSnapshot","doc","setDoc","jsxDEV","_jsxDEV","App","_s","user","setUser","userId","setUserId","isAuthReady","setIsAuthReady","currentPage","setCurrentPage","DASHBOARD","selectedRequest","setSelectedRequest","requests","setRequests","isSidebarOpen","setIsSidebarOpen","isDarkMode","setIsDarkMode","db","setDb","auth","setAuth","toggleSidebar","toggleDarkMode","console","log","firebaseConfig","__firebase_config","JSON","parse","initialAuthToken","__initial_auth_token","app","newDb","newAuth","authListener","authUser","uid","role","FEDERAL","name","error","appId","__app_id","privateRequestsPath","unsub","snapshot","fetchedRequests","docs","map","id","data","handleLogin","username","password","handleLogout","signOut","handleViewRequest","request","APPROVALS","handleApproveReject","action","feedback","requestDocRef","status","merge","renderContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onBack","REQUESTS","onSubmit","onViewRequest","MASTER_DATA","REPORTS","userRole","onNavigate","onLogout","_c","$RefreshReg$"],"sources":["D:/FARMERS/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport Dashboard from './components/Dashboard';\nimport RequestsTable from './components/RequestsTable';\nimport ApprovalForm from './components/ApprovalForm';\nimport LoginPage from './components/LoginPage';\nimport MasterData from './components/MasterData';\nimport ReportsPage from './components/ReportsPage';\nimport { adminRoles, pageNames } from './constants';\n\n// Firebase imports\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInAnonymously, signInWithCustomToken, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, collection, onSnapshot, doc, setDoc } from 'firebase/firestore';\n\nfunction App() {\n    // State for user authentication and role\n    const [user, setUser] = useState(null);\n    const [userId, setUserId] = useState(null);\n    const [isAuthReady, setIsAuthReady] = useState(false);\n\n    // State for current page navigation\n    const [currentPage, setCurrentPage] = useState(pageNames.DASHBOARD);\n\n    // State for a selected request for viewing/approving\n    const [selectedRequest, setSelectedRequest] = useState(null);\n\n    // State for requests fetched from Firestore\n    const [requests, setRequests] = useState([]);\n\n    // New state for UI features\n    const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n    const [isDarkMode, setIsDarkMode] = useState(false);\n\n    // Firebase instances\n    const [db, setDb] = useState(null);\n    const [auth, setAuth] = useState(null);\n\n    // Function to toggle sidebar\n    const toggleSidebar = () => {\n        setIsSidebarOpen(!isSidebarOpen);\n    };\n\n    // Function to toggle dark mode\n    const toggleDarkMode = () => {\n        setIsDarkMode(!isDarkMode);\n    };\n\n    // Initializing Firebase and authentication\n    useEffect(() => {\n        console.log(\"Starting Firebase initialization...\");\n        try {\n            // eslint-disable-next-line no-undef\n            const firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : {};\n            // eslint-disable-next-line no-undef\n            const initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\n\n            const app = initializeApp(firebaseConfig);\n            const newDb = getFirestore(app);\n            const newAuth = getAuth(app);\n            setDb(newDb);\n            setAuth(newAuth);\n\n            const authListener = onAuthStateChanged(newAuth, async(authUser) => {\n                if (authUser) {\n                    console.log(\"User signed in:\", authUser.uid);\n                    setUserId(authUser.uid);\n                    // NOTE: In a real app, you would fetch the user's role from a database here\n                    setUser({ role: adminRoles.FEDERAL, name: 'Admin User' });\n                } else {\n                    console.log(\"No user signed in. Attempting sign-in...\");\n                    try {\n                        if (initialAuthToken) {\n                            await signInWithCustomToken(newAuth, initialAuthToken);\n                        } else {\n                            await signInAnonymously(newAuth);\n                        }\n                    } catch (error) {\n                        console.error(\"Error during sign-in:\", error);\n                    }\n                }\n                setIsAuthReady(true);\n            });\n\n            return () => {\n                authListener();\n            };\n        } catch (error) {\n            console.error(\"Error initializing Firebase:\", error);\n            setIsAuthReady(true);\n        }\n    }, []);\n\n    // Real-time data fetching from Firestore\n    useEffect(() => {\n        if (!db || !userId || !isAuthReady) return;\n\n        // eslint-disable-next-line no-undef\n        const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\n        const privateRequestsPath = `artifacts/${appId}/users/${userId}/requests`;\n\n        const unsub = onSnapshot(collection(db, privateRequestsPath), (snapshot) => {\n            const fetchedRequests = snapshot.docs.map(doc => ({\n                id: doc.id,\n                ...doc.data()\n            }));\n            setRequests(fetchedRequests);\n        }, (error) => {\n            console.error(\"Error fetching requests:\", error);\n        });\n\n        return () => {\n            unsub();\n        }\n    }, [db, userId, isAuthReady]);\n\n\n    const handleLogin = (username, password, role) => {\n        if (username === 'shegaw' && password === 'shegaw123' && role === adminRoles.FEDERAL) {\n            setUser({ role: role, name: username });\n        } else {\n            console.error('Invalid username, password, or role.');\n        }\n    };\n\n    const handleLogout = async() => {\n        if (auth) {\n            try {\n                await auth.signOut();\n                setUser(null);\n                setUserId(null);\n                setCurrentPage(pageNames.DASHBOARD);\n            } catch (error) {\n                console.error(\"Error signing out:\", error);\n            }\n        }\n    };\n\n    const handleViewRequest = (request) => {\n        setSelectedRequest(request);\n        setCurrentPage(pageNames.APPROVALS);\n    };\n\n    const handleApproveReject = async(action, feedback) => {\n        if (!db || !selectedRequest || !userId) return;\n\n        try {\n            // eslint-disable-next-line no-undef\n            const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\n            const requestDocRef = doc(db, `artifacts/${appId}/users/${userId}/requests`, selectedRequest.id);\n\n            await setDoc(requestDocRef, {\n                ...selectedRequest,\n                status: action === 'Approve' ? 'Approved' : 'Rejected',\n                feedback: feedback\n            }, { merge: true });\n\n            setSelectedRequest(null);\n            setCurrentPage(pageNames.DASHBOARD);\n        } catch (error) {\n            console.error(\"Error updating document:\", error);\n        }\n    };\n\n    const renderContent = () => {\n        if (!isAuthReady) {\n            return <div className = \"text-center p-8 text-xl text-gray-500 dark:text-gray-400\" > Authenticating... < /div>;\n        }\n\n        if (!user) {\n            return <LoginPage onLogin = { handleLogin }\n            isDarkMode = { isDarkMode }\n            />;\n        }\n\n        if (selectedRequest && currentPage === pageNames.APPROVALS) {\n            return ( <\n                ApprovalForm request = { selectedRequest }\n                onBack = {\n                    () => setCurrentPage(pageNames.REQUESTS)\n                }\n                onSubmit = { handleApproveReject }\n                />\n            );\n        }\n\n        switch (currentPage) {\n            case pageNames.DASHBOARD:\n                return <Dashboard user = { user }\n                requests = { requests }\n                userId = { userId }\n                isDarkMode = { isDarkMode }\n                />;\n            case pageNames.REQUESTS:\n                return <RequestsTable requests = { requests }\n                onViewRequest = { handleViewRequest }\n                isDarkMode = { isDarkMode }\n                />;\n            case pageNames.MASTER_DATA:\n                return <MasterData user = { user }\n                isDarkMode = { isDarkMode }\n                />;\n            case pageNames.REPORTS:\n                return <ReportsPage user = { user }\n                isDarkMode = { isDarkMode }\n                />;\n            default:\n                return <Dashboard user = { user }\n                requests = { requests }\n                userId = { userId }\n                isDarkMode = { isDarkMode }\n                />;\n        }\n    };\n\n    return ( <\n            div className = { `${isDarkMode ? 'dark' : ''}` } >\n            <\n            div className = \"bg-gray-100 dark:bg-gray-900 min-h-screen font-sans antialiased text-gray-800 dark:text-gray-200 flex\" > {\n                user && < Sidebar\n                userRole = { user.role }\n                currentPage = { currentPage }\n                onNavigate = { setCurrentPage }\n                isSidebarOpen = { isSidebarOpen }\n                toggleSidebar = { toggleSidebar }\n                isDarkMode = { isDarkMode }\n                />} <\n                div className = { `flex-1 transition-all duration-300 ${isSidebarOpen ? 'ml-64' : 'ml-20'}` } > {\n                    user && < Header\n                    user = { user }\n                    onLogout = { handleLogout }\n                    isSidebarOpen = { isSidebarOpen }\n                    toggleSidebar = { toggleSidebar }\n                    isDarkMode = { isDarkMode }\n                    toggleDarkMode = { toggleDarkMode }\n                    />} <\n                    main className = \"container mx-auto p-4 md:p-8\" > { renderContent() } <\n                    /main> < /\n                    div > <\n                    /div> < /\n                    div >\n                );\n            }\n\n            export default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}