{"ast":null,"code":"import React,{useState}from'react';import api from'./api';// Import dashboard components\nimport FederalDashboard from'./dashboards/FederalDashboard';import RegionDashboard from'./dashboards/RegionDashboard';import ZoneDashboard from'./dashboards/ZoneDashboard';import WoredaDashboard from'./dashboards/WoredaDashboard';import KebeleDashboard from'./dashboards/KebeleDashboard';import FarmerDashboard from'./dashboards/FarmerDashboard';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[phone,setPhone]=useState('');const[password,setPassword]=useState('');const[message,setMessage]=useState('');const[currentUser,setCurrentUser]=useState(null);// stores user info after login\nconst handleLogin=async e=>{e.preventDefault();try{const res=await api.post('/login',{phone,password});setCurrentUser(res.data);// save user info including role\nsetMessage('');}catch(err){console.log(err);setMessage('Login failed: '+(err.response?err.response.data.message:'Network Error'));}};// Render dashboard based on role\nconst renderDashboard=()=>{if(!currentUser)return null;switch(currentUser.role){case'Federal':return/*#__PURE__*/_jsx(FederalDashboard,{currentUser:currentUser});case'Region':return/*#__PURE__*/_jsx(RegionDashboard,{currentUser:currentUser});case'Zone':return/*#__PURE__*/_jsx(ZoneDashboard,{currentUser:currentUser});case'Woreda':return/*#__PURE__*/_jsx(WoredaDashboard,{currentUser:currentUser});case'Kebele':return/*#__PURE__*/_jsx(KebeleDashboard,{currentUser:currentUser});case'Farmer':return/*#__PURE__*/_jsx(FarmerDashboard,{currentUser:currentUser});default:return/*#__PURE__*/_jsx(\"div\",{className:\"text-red-500\",children:\" Unknown role \"});}};if(currentUser){return renderDashboard();}return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen flex items-center justify-center bg-gray-100\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,className:\"bg-white p-8 rounded shadow-md w-80\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl mb-4 font-bold text-center\",children:\" Login \"}),\" \",message&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-red-500 mb-2\",children:[\" \",message,\" \"]}),/*#__PURE__*/_jsx(\"label\",{className:\"block mb-2\",children:\" Phone Number \"}),\" \",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:phone,onChange:e=>setPhone(e.target.value),className:\"border p-2 mb-4 w-full rounded\",placeholder:\"Enter phone number\",required:true}),/*#__PURE__*/_jsx(\"label\",{className:\"block mb-2\",children:\" Password \"}),\" \",/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),className:\"border p-2 mb-4 w-full rounded\",placeholder:\"Enter password\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"bg-blue-500 text-white p-2 rounded w-full hover:bg-blue-600\",children:\"Login \"}),\" \"]}),\" \"]});}export default App;","map":{"version":3,"names":["React","useState","api","FederalDashboard","RegionDashboard","ZoneDashboard","WoredaDashboard","KebeleDashboard","FarmerDashboard","jsx","_jsx","jsxs","_jsxs","App","phone","setPhone","password","setPassword","message","setMessage","currentUser","setCurrentUser","handleLogin","e","preventDefault","res","post","data","err","console","log","response","renderDashboard","role","className","children","onSubmit","type","value","onChange","target","placeholder","required"],"sources":["D:/FARMERS/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport api from './api';\r\n\r\n// Import dashboard components\r\nimport FederalDashboard from './dashboards/FederalDashboard';\r\nimport RegionDashboard from './dashboards/RegionDashboard';\r\nimport ZoneDashboard from './dashboards/ZoneDashboard';\r\nimport WoredaDashboard from './dashboards/WoredaDashboard';\r\nimport KebeleDashboard from './dashboards/KebeleDashboard';\r\nimport FarmerDashboard from './dashboards/FarmerDashboard';\r\n\r\nfunction App() {\r\n    const [phone, setPhone] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [currentUser, setCurrentUser] = useState(null); // stores user info after login\r\n\r\n    const handleLogin = async(e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const res = await api.post('/login', { phone, password });\r\n            setCurrentUser(res.data); // save user info including role\r\n            setMessage('');\r\n        } catch (err) {\r\n            console.log(err);\r\n            setMessage('Login failed: ' + (err.response ? err.response.data.message : 'Network Error'));\r\n        }\r\n    };\r\n\r\n    // Render dashboard based on role\r\n    const renderDashboard = () => {\r\n        if (!currentUser) return null;\r\n\r\n        switch (currentUser.role) {\r\n            case 'Federal':\r\n                return <FederalDashboard currentUser = { currentUser }\r\n                />;\r\n            case 'Region':\r\n                return <RegionDashboard currentUser = { currentUser }\r\n                />;\r\n            case 'Zone':\r\n                return <ZoneDashboard currentUser = { currentUser }\r\n                />;\r\n            case 'Woreda':\r\n                return <WoredaDashboard currentUser = { currentUser }\r\n                />;\r\n            case 'Kebele':\r\n                return <KebeleDashboard currentUser = { currentUser }\r\n                />;\r\n            case 'Farmer':\r\n                return <FarmerDashboard currentUser = { currentUser }\r\n                />;\r\n            default:\r\n                return <div className = \"text-red-500\" > Unknown role < /div>;\r\n        }\r\n    };\r\n\r\n    if (currentUser) {\r\n        return renderDashboard();\r\n    }\r\n\r\n    return ( <\r\n        div className = \"min-h-screen flex items-center justify-center bg-gray-100\" >\r\n        <\r\n        form onSubmit = { handleLogin }\r\n        className = \"bg-white p-8 rounded shadow-md w-80\" >\r\n        <\r\n        h1 className = \"text-2xl mb-4 font-bold text-center\" > Login < /h1> {\r\n        message && < div className = \"text-red-500 mb-2\" > { message } < /div>}\r\n\r\n        <\r\n        label className = \"block mb-2\" > Phone Number < /label> <\r\n        input type = \"text\"\r\n        value = { phone }\r\n        onChange = {\r\n            (e) => setPhone(e.target.value)\r\n        }\r\n        className = \"border p-2 mb-4 w-full rounded\"\r\n        placeholder = \"Enter phone number\"\r\n        required /\r\n        >\r\n\r\n        <\r\n        label className = \"block mb-2\" > Password < /label> <\r\n        input type = \"password\"\r\n        value = { password }\r\n        onChange = {\r\n            (e) => setPassword(e.target.value)\r\n        }\r\n        className = \"border p-2 mb-4 w-full rounded\"\r\n        placeholder = \"Enter password\"\r\n        required /\r\n        >\r\n\r\n        <\r\n        button type = \"submit\"\r\n        className = \"bg-blue-500 text-white p-2 rounded w-full hover:bg-blue-600\" >\r\n        Login <\r\n        /button> < /\r\n        form > <\r\n        /div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}