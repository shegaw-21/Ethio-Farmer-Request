{"ast":null,"code":"var _jsxFileName = \"D:\\\\FARMERS\\\\frontend\\\\src\\\\dashboards\\\\KebeleDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './KebeleDashboard.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst KebeleDashboard = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState('overview');\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n\n  // Farmer Management State\n  const [farmers, setFarmers] = useState([]);\n  const [showFarmerModal, setShowFarmerModal] = useState(false);\n  const [editingFarmer, setEditingFarmer] = useState(null);\n  const [farmerForm, setFarmerForm] = useState({\n    fullName: '',\n    phoneNumber: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  // Product Management State\n  const [products, setProducts] = useState([]);\n  const [showProductModal, setShowProductModal] = useState(false);\n  const [editingProduct, setEditingProduct] = useState(null);\n  const [productForm, setProductForm] = useState({\n    name: '',\n    description: '',\n    category: '',\n    amount: ''\n  });\n\n  // Request Management State\n  const [requests, setRequests] = useState([]);\n  const [selectedRequests, setSelectedRequests] = useState([]);\n  const [showRequestModal, setShowRequestModal] = useState(false);\n  const [selectedRequest, setSelectedRequest] = useState(null);\n  const [requestStatus, setRequestStatus] = useState('');\n  const [decisionReason, setDecisionReason] = useState('');\n  const [bulkAction, setBulkAction] = useState('');\n\n  // Stats State\n  const [stats, setStats] = useState({\n    totalRequests: 0,\n    pendingRequests: 0,\n    approvedRequests: 0,\n    rejectedRequests: 0,\n    totalFarmers: 0,\n    totalProducts: 0\n  });\n  useEffect(() => {\n    // Check authentication\n    const token = localStorage.getItem('token');\n    const userData = JSON.parse(localStorage.getItem('user') || 'null');\n    const userType = localStorage.getItem('userType');\n    if (!token || userType !== 'Kebele' || !userData) {\n      navigate('/login');\n      return;\n    }\n    setUser(userData);\n    fetchDashboardData();\n  }, [navigate]);\n  const fetchDashboardData = async () => {\n    try {\n      const token = localStorage.getItem('token');\n\n      // Fetch farmers in scope\n      const farmersResponse = await fetch('http://localhost:5000/api/admins/admins', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (farmersResponse.ok) {\n        const data = await farmersResponse.json();\n        const farmersData = data.filter(item => item.type === 'farmer');\n        setFarmers(farmersData);\n        setStats(prev => ({\n          ...prev,\n          totalFarmers: farmersData.length\n        }));\n      }\n\n      // Fetch products\n      const productsResponse = await fetch('http://localhost:5000/api/admins/getproducts', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (productsResponse.ok) {\n        const productsData = await productsResponse.json();\n        setProducts(productsData);\n        setStats(prev => ({\n          ...prev,\n          totalProducts: productsData.length\n        }));\n      }\n\n      // Fetch requests using the approval routes\n      const requestsResponse = await fetch('http://localhost:5000/api/approval/requests', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (requestsResponse.ok) {\n        const requestsData = await requestsResponse.json();\n        setRequests(requestsData);\n\n        // Calculate stats from requests data\n        const totalRequests = requestsData.length;\n        const pendingRequests = requestsData.filter(req => req.status === 'pending').length;\n        const approvedRequests = requestsData.filter(req => req.status === 'approved').length;\n        const rejectedRequests = requestsData.filter(req => req.status === 'rejected').length;\n        const acceptedRequests = requestsData.filter(req => req.status === 'accepted').length;\n        setStats(prev => ({\n          ...prev,\n          totalRequests,\n          pendingRequests,\n          approvedRequests: approvedRequests + acceptedRequests,\n          rejectedRequests\n        }));\n      }\n    } catch (error) {\n      console.error('Error fetching dashboard data:', error);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('userType');\n    navigate('/login');\n  };\n\n  // Farmer Management Functions\n  const handleFarmerSubmit = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token');\n      if (farmerForm.password !== farmerForm.confirmPassword) {\n        alert('Passwords do not match');\n        return;\n      }\n      const url = editingFarmer ? `http://localhost:5000/api/admins/edit/${editingFarmer.id}` : 'http://localhost:5000/api/admins/createfarmer';\n      const method = editingFarmer ? 'PUT' : 'POST';\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          fullName: farmerForm.fullName,\n          phoneNumber: farmerForm.phoneNumber,\n          password: farmerForm.password,\n          role: 'Farmer',\n          region_name: user.region_name,\n          zone_name: user.zone_name,\n          woreda_name: user.woreda_name,\n          kebele_name: user.kebele_name\n        })\n      });\n      if (response.ok) {\n        setShowFarmerModal(false);\n        setEditingFarmer(null);\n        setFarmerForm({\n          fullName: '',\n          phoneNumber: '',\n          password: '',\n          confirmPassword: ''\n        });\n        fetchDashboardData();\n        alert(editingFarmer ? 'Farmer updated successfully' : 'Farmer registered successfully');\n      } else {\n        const errorData = await response.json();\n        alert(errorData.message || 'Error processing farmer');\n      }\n    } catch (error) {\n      console.error('Error processing farmer:', error);\n      alert('Error processing farmer');\n    }\n  };\n  const handleEditFarmer = farmer => {\n    setEditingFarmer(farmer);\n    setFarmerForm({\n      fullName: farmer.full_name,\n      phoneNumber: farmer.phone_number,\n      password: '',\n      confirmPassword: ''\n    });\n    setShowFarmerModal(true);\n  };\n  const handleDeleteFarmer = async farmerId => {\n    if (window.confirm('Are you sure you want to delete this farmer?')) {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`http://localhost:5000/api/admins/delete/${farmerId}`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          fetchDashboardData();\n          alert('Farmer deleted successfully');\n        } else {\n          const errorData = await response.json();\n          alert(errorData.message || 'Error deleting farmer');\n        }\n      } catch (error) {\n        console.error('Error deleting farmer:', error);\n        alert('Error deleting farmer');\n      }\n    }\n  };\n\n  // Product Management Functions\n  const handleProductSubmit = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token');\n      const url = editingProduct ? `http://localhost:5000/api/admins/editproduct/${editingProduct.id}` : 'http://localhost:5000/api/admins/addproduct';\n      const method = editingProduct ? 'PUT' : 'POST';\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          name: productForm.name,\n          description: productForm.description,\n          category: productForm.category,\n          amount: productForm.amount\n        })\n      });\n      if (response.ok) {\n        setShowProductModal(false);\n        setEditingProduct(null);\n        setProductForm({\n          name: '',\n          description: '',\n          category: '',\n          amount: ''\n        });\n        fetchDashboardData();\n        alert(editingProduct ? 'Product updated successfully' : 'Product added successfully');\n      } else {\n        const errorData = await response.json();\n        alert(errorData.message || 'Error processing product');\n      }\n    } catch (error) {\n      console.error('Error processing product:', error);\n      alert('Error processing product');\n    }\n  };\n  const handleEditProduct = product => {\n    setEditingProduct(product);\n    setProductForm({\n      name: product.name,\n      description: product.description,\n      category: product.category,\n      amount: product.amount\n    });\n    setShowProductModal(true);\n  };\n  const handleDeleteProduct = async productId => {\n    if (window.confirm('Are you sure you want to delete this product?')) {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`http://localhost:5000/api/admins/deleteproduct/${productId}`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          fetchDashboardData();\n          alert('Product deleted successfully');\n        } else {\n          const errorData = await response.json();\n          alert(errorData.message || 'Error deleting product');\n        }\n      } catch (error) {\n        console.error('Error deleting product:', error);\n        alert('Error deleting product');\n      }\n    }\n  };\n\n  // Request Management Functions\n  const updateRequestStatus = async (requestId, status, reason = '') => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:5000/api/approval/requests/${requestId}/status`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          status,\n          decisionReason: reason\n        })\n      });\n      const responseData = await response.json();\n      if (response.ok) {\n        setShowRequestModal(false);\n        setSelectedRequest(null);\n        setRequestStatus('');\n        setDecisionReason('');\n        fetchDashboardData();\n        alert(`Request ${responseData.request.status} successfully`);\n      } else {\n        alert(responseData.message || 'Error updating request');\n      }\n    } catch (error) {\n      console.error('Error updating request:', error);\n      alert('Error updating request');\n    }\n  };\n  const handleBulkUpdate = async () => {\n    if (!bulkAction || selectedRequests.length === 0) {\n      alert('Please select an action and at least one request');\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/approval/requests/bulk-update', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          requestIds: selectedRequests,\n          action: bulkAction\n        })\n      });\n      const responseData = await response.json();\n      if (response.ok) {\n        setSelectedRequests([]);\n        setBulkAction('');\n        fetchDashboardData();\n        alert('Bulk update completed successfully');\n      } else {\n        alert(responseData.message || 'Error performing bulk update');\n      }\n    } catch (error) {\n      console.error('Error performing bulk update:', error);\n      alert('Error performing bulk update');\n    }\n  };\n  const handleStatusUpdate = (request, status) => {\n    setSelectedRequest(request);\n    setRequestStatus(status);\n    setShowRequestModal(true);\n  };\n  const confirmStatusUpdate = () => {\n    if (selectedRequest && requestStatus) {\n      updateRequestStatus(selectedRequest.id, requestStatus, decisionReason);\n    }\n  };\n  const toggleRequestSelection = requestId => {\n    if (selectedRequests.includes(requestId)) {\n      setSelectedRequests(selectedRequests.filter(id => id !== requestId));\n    } else {\n      setSelectedRequests([...selectedRequests, requestId]);\n    }\n  };\n  const selectAllRequests = () => {\n    if (selectedRequests.length === requests.filter(r => r.status === 'pending').length) {\n      setSelectedRequests([]);\n    } else {\n      setSelectedRequests(requests.filter(r => r.status === 'pending').map(r => r.id));\n    }\n  };\n  const getStatusBadge = status => {\n    const statusClasses = {\n      'pending': 'status-pending',\n      'approved': 'status-approved',\n      'accepted': 'status-accepted',\n      'rejected': 'status-rejected'\n    };\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `status-badge ${statusClasses[status] || ''}`,\n      children: [\" \", status.charAt(0).toUpperCase() + status.slice(1), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 22\n    }, this);\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 20\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kebele-dashboard\",\n    children: [\" \", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Kebele Dashboard \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'overview' ? 'active' : '',\n          onClick: () => setActiveTab('overview'),\n          children: \" \\uD83D\\uDCCAOverview \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'farmers' ? 'active' : '',\n          onClick: () => setActiveTab('farmers'),\n          children: \" \\uD83D\\uDC68\\u200D\\uD83C\\uDF3EFarmers \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 22\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'products' ? 'active' : '',\n          onClick: () => setActiveTab('products'),\n          children: \" \\uD83D\\uDED2Products \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 22\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'requests' ? 'active' : '',\n          onClick: () => setActiveTab('requests'),\n          children: \" \\uD83D\\uDCCBRequests \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 22\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 42\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 68\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" Welcome, \", user.fullName, \"(Kebele Admin) \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-btn\",\n          children: \"Logout \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 66\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [\" \", \" \", activeTab === 'overview' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overview-tab\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" System Overview \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 21\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\" \", stats.totalRequests, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \" Total Requests \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 57\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 21\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\" \", stats.pendingRequests, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \" Pending Requests \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 59\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 27\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\" \", stats.approvedRequests, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \" Approved Requests \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 60\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 27\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\" \", stats.rejectedRequests, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \" Rejected Requests \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 60\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 27\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\" \", stats.totalFarmers, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \" Farmers \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 56\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 27\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\" \", stats.totalProducts, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \" Products \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 57\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 27\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quick-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \" Quick Actions \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 21\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"actions-grid\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setActiveTab('requests'),\n                className: \"action-btn\",\n                children: \" \\uD83D\\uDCCBManage Requests \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setActiveTab('farmers'),\n                className: \"action-btn\",\n                children: \" \\uD83D\\uDC68\\u200D\\uD83C\\uDF3EManage Farmers \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 30\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setActiveTab('products'),\n                className: \"action-btn\",\n                children: \" \\uD83D\\uDED2Manage Products \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 30\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowFarmerModal(true),\n                className: \"action-btn\",\n                children: \" \\u2795Register Farmer \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 30\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowProductModal(true),\n                className: \"action-btn\",\n                children: \" \\u2795Add Product \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 30\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 47\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 21\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 47\n        }, this), \" \", activeTab === 'farmers' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"farmers-tab\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tab-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \" Farmer Management \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 21\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Managing farmers in your kebele: \", user.kebele_name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 51\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowFarmerModal(true),\n              className: \"add-btn\",\n              children: \" \\u2795Register New Farmer \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 85\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"farmers-list\",\n            children: [\" \", farmers.map(farmer => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"farmer-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"farmer-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\" \", farmer.full_name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 29\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \\uD83D\\uDCDEPhone: \", farmer.phone_number, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 62\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \\uD83D\\uDCCDKebele: \", farmer.kebele_name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 72\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \\uD83D\\uDCC5Registered: \", new Date(farmer.created_at).toLocaleDateString(), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 72\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 29\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"farmer-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleEditFarmer(farmer),\n                  className: \"edit-btn\",\n                  children: \" \\u270F\\uFE0FEdit \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 29\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteFarmer(farmer.id),\n                  className: \"delete-btn\",\n                  children: \" \\uD83D\\uDDD1\\uFE0FDelete \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 38\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 35\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"farmer-requests\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \" Recent Requests: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 29\n                }, this), \" \", requests.filter(req => req.farmer_id === farmer.id).slice(0, 3).map(req => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"request-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"product-name\",\n                    children: [\" \", req.product_name, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 572,\n                    columnNumber: 41\n                  }, this), \" \", getStatusBadge(req.status), \" \"]\n                }, req.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 569,\n                  columnNumber: 51\n                }, this)), \" \", requests.filter(req => req.farmer_id === farmer.id).length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \" No requests from this farmer \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 103\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 35\n              }, this), \" \"]\n            }, farmer.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 51\n            }, this)), \" \", farmers.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" No farmers found in your kebele. \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 51\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 21\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 46\n        }, this), \" \", activeTab === 'products' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"products-tab\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tab-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \" Product Management \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 21\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" Managing products in your kebele \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 52\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowProductModal(true),\n              className: \"add-btn\",\n              children: \" \\u2795Add New Product \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 64\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"products-list\",\n            children: [\" \", products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"product-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"product-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\" \", product.name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 615,\n                  columnNumber: 29\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \", product.description, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 58\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \\uD83D\\uDCE6Category: \", product.category, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 63\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \\uD83D\\uDCB0Amount: \", product.amount, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 72\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \\uD83D\\uDCC5Created: \", new Date(product.created_at).toLocaleDateString(), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 619,\n                  columnNumber: 68\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 29\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"product-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleEditProduct(product),\n                  className: \"edit-btn\",\n                  children: \" \\u270F\\uFE0FEdit \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 29\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteProduct(product.id),\n                  className: \"delete-btn\",\n                  children: \" \\uD83D\\uDDD1\\uFE0FDelete \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 38\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 35\n              }, this), \" \"]\n            }, product.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 53\n            }, this)), \" \", products.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" No products found. \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 52\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 21\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 47\n        }, this), \" \", activeTab === 'requests' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"requests-tab\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tab-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \" Request Management \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 21\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Manage farmer requests in your kebele: \", user.kebele_name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 52\n            }, this), requests.filter(r => r.status === 'pending').length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bulk-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                value: bulkAction,\n                onChange: e => setBulkAction(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \" Select Bulk Action \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 661,\n                  columnNumber: 29\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"approve\",\n                  children: \" Approve(Intelligent Decision) \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 662,\n                  columnNumber: 79\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"accept\",\n                  children: \" Accept \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 663,\n                  columnNumber: 97\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"reject\",\n                  children: \" Reject \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 664,\n                  columnNumber: 73\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 29\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleBulkUpdate,\n                className: \"bulk-btn\",\n                children: [\"Apply to Selected(\", selectedRequests.length, \") \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 38\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: selectAllRequests,\n                className: \"select-all-btn\",\n                children: [\" \", selectedRequests.length === requests.filter(r => r.status === 'pending').length ? 'Deselect All' : 'Select All Pending', \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 38\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 86\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"requests-list\",\n            children: [\" \", requests.map(request => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"request-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"request-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\" \", request.product_name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 689,\n                  columnNumber: 33\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \\uD83D\\uDC68\\u200D\\uD83C\\uDF3EFarmer: \", request.farmer_name, \"(\", request.farmer_phone, \") \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 690,\n                  columnNumber: 70\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \\uD83D\\uDCE6Quantity: \", request.quantity, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 691,\n                  columnNumber: 106\n                }, this), \" \", request.note && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \\uD83D\\uDCDDNote: \", request.note, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 693,\n                  columnNumber: 53\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \\uD83D\\uDCB0Product Amount: \", request.product_amount, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 693,\n                  columnNumber: 91\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \\uD83D\\uDCC5Date: \", new Date(request.created_at).toLocaleDateString(), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 694,\n                  columnNumber: 96\n                }, this), \" \", getStatusBadge(request.status), \" \", request.handled_by_admin && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \\uD83D\\uDC64Handled by: \", request.handled_by_admin, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 696,\n                  columnNumber: 75\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 33\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"request-actions\",\n                children: [\" \", request.status === 'pending' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"request-checkbox\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      checked: selectedRequests.includes(request.id),\n                      onChange: () => toggleRequestSelection(request.id)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 706,\n                      columnNumber: 49\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \" Select \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 711,\n                      columnNumber: 52\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 704,\n                    columnNumber: 49\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"status-options\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"radio\",\n                        name: `status-${request.id}`,\n                        onChange: () => handleStatusUpdate(request, 'approve')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 717,\n                        columnNumber: 49\n                      }, this), \"Approve(Intelligent) \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 715,\n                      columnNumber: 49\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"radio\",\n                        name: `status-${request.id}`,\n                        onChange: () => handleStatusUpdate(request, 'accept')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 726,\n                        columnNumber: 49\n                      }, this), \"Accept \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 724,\n                      columnNumber: 57\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"radio\",\n                        name: `status-${request.id}`,\n                        onChange: () => handleStatusUpdate(request, 'reject')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 735,\n                        columnNumber: 49\n                      }, this), \"Reject \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 733,\n                      columnNumber: 57\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 713,\n                    columnNumber: 55\n                  }, this), \" \"]\n                }, void 0, true), \" \", (request.status === 'accepted' || request.status === 'approved' || request.status === 'rejected') && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \" Processed \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 747,\n                  columnNumber: 148\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 700,\n                columnNumber: 47\n              }, this), \" \"]\n            }, request.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 53\n            }, this)), \" \", requests.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" No requests found in your kebele. \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 56\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 21\n          }, this), \" \", showRequestModal && selectedRequest && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \" Update Request Status \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 766,\n                columnNumber: 33\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"You are about to update the request for \\\"\", selectedRequest.product_name, \"\\\" from \", selectedRequest.farmer_name, \". \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 67\n              }, this), requestStatus === 'approve' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Decision Reason(Optional): \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 777,\n                  columnNumber: 41\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: decisionReason,\n                  onChange: e => setDecisionReason(e.target.value),\n                  rows: \"3\",\n                  placeholder: \"Add any notes about your decision...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 778,\n                  columnNumber: 86\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 775,\n                columnNumber: 70\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modal-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: confirmStatusUpdate,\n                  children: [\"Confirm \", requestStatus === 'approve' ? 'Intelligent Approval' : requestStatus, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 792,\n                  columnNumber: 33\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    setShowRequestModal(false);\n                    setSelectedRequest(null);\n                    setRequestStatus('');\n                    setDecisionReason('');\n                  },\n                  children: \"Cancel \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 795,\n                  columnNumber: 42\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 790,\n                columnNumber: 33\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 764,\n              columnNumber: 33\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 70\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 47\n        }, this), \" \", showFarmerModal && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\" \", editingFarmer ? 'Edit Farmer' : 'Register New Farmer', \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 25\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleFarmerSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Full Name: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 825,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: farmerForm.fullName,\n                  onChange: e => setFarmerForm({\n                    ...farmerForm,\n                    fullName: e.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 826,\n                  columnNumber: 54\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 823,\n                columnNumber: 25\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Phone Number: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 836,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"tel\",\n                  value: farmerForm.phoneNumber,\n                  onChange: e => setFarmerForm({\n                    ...farmerForm,\n                    phoneNumber: e.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 837,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 834,\n                columnNumber: 31\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Password: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 847,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  value: farmerForm.password,\n                  onChange: e => setFarmerForm({\n                    ...farmerForm,\n                    password: e.target.value\n                  }),\n                  required: !editingFarmer\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 848,\n                  columnNumber: 53\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 845,\n                columnNumber: 31\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Confirm Password: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 857,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  value: farmerForm.confirmPassword,\n                  onChange: e => setFarmerForm({\n                    ...farmerForm,\n                    confirmPassword: e.target.value\n                  }),\n                  required: !editingFarmer\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 858,\n                  columnNumber: 61\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 855,\n                columnNumber: 31\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modal-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: [\" \", editingFarmer ? 'Update Farmer' : 'Register Farmer', \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 867,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => {\n                    setShowFarmerModal(false);\n                    setEditingFarmer(null);\n                    setFarmerForm({\n                      fullName: '',\n                      phoneNumber: '',\n                      password: '',\n                      confirmPassword: ''\n                    });\n                  },\n                  children: \"Cancel \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 868,\n                  columnNumber: 117\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 865,\n                columnNumber: 31\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 821,\n              columnNumber: 95\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 818,\n            columnNumber: 25\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 42\n        }, this), \" \", showProductModal && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\" \", editingProduct ? 'Edit Product' : 'Add New Product', \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 891,\n              columnNumber: 25\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleProductSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Product Name: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 896,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: productForm.name,\n                  onChange: e => setProductForm({\n                    ...productForm,\n                    name: e.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 897,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 894,\n                columnNumber: 25\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Description: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 907,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: productForm.description,\n                  onChange: e => setProductForm({\n                    ...productForm,\n                    description: e.target.value\n                  }),\n                  rows: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 908,\n                  columnNumber: 56\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 905,\n                columnNumber: 31\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Category: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 917,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: productForm.category,\n                  onChange: e => setProductForm({\n                    ...productForm,\n                    category: e.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 918,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 915,\n                columnNumber: 31\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Amount: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 928,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: productForm.amount,\n                  onChange: e => setProductForm({\n                    ...productForm,\n                    amount: e.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 929,\n                  columnNumber: 51\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 926,\n                columnNumber: 31\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modal-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: [\" \", editingProduct ? 'Update Product' : 'Add Product', \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 939,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => {\n                    setShowProductModal(false);\n                    setEditingProduct(null);\n                    setProductForm({\n                      name: '',\n                      description: '',\n                      category: '',\n                      amount: ''\n                    });\n                  },\n                  children: \"Cancel \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 940,\n                  columnNumber: 115\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 937,\n                columnNumber: 31\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 892,\n              columnNumber: 93\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 889,\n            columnNumber: 25\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 887,\n          columnNumber: 43\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 36\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 415,\n    columnNumber: 18\n  }, this);\n};\n_s(KebeleDashboard, \"7QbGzD2Ag237RXSaKxa+9c0KdEY=\", false, function () {\n  return [useNavigate];\n});\n_c = KebeleDashboard;\nexport default KebeleDashboard;\nvar _c;\n$RefreshReg$(_c, \"KebeleDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","KebeleDashboard","_s","activeTab","setActiveTab","user","setUser","navigate","farmers","setFarmers","showFarmerModal","setShowFarmerModal","editingFarmer","setEditingFarmer","farmerForm","setFarmerForm","fullName","phoneNumber","password","confirmPassword","products","setProducts","showProductModal","setShowProductModal","editingProduct","setEditingProduct","productForm","setProductForm","name","description","category","amount","requests","setRequests","selectedRequests","setSelectedRequests","showRequestModal","setShowRequestModal","selectedRequest","setSelectedRequest","requestStatus","setRequestStatus","decisionReason","setDecisionReason","bulkAction","setBulkAction","stats","setStats","totalRequests","pendingRequests","approvedRequests","rejectedRequests","totalFarmers","totalProducts","token","localStorage","getItem","userData","JSON","parse","userType","fetchDashboardData","farmersResponse","fetch","headers","ok","data","json","farmersData","filter","item","type","prev","length","productsResponse","productsData","requestsResponse","requestsData","req","status","acceptedRequests","error","console","handleLogout","removeItem","handleFarmerSubmit","e","preventDefault","alert","url","id","method","response","body","stringify","role","region_name","zone_name","woreda_name","kebele_name","errorData","message","handleEditFarmer","farmer","full_name","phone_number","handleDeleteFarmer","farmerId","window","confirm","handleProductSubmit","handleEditProduct","product","handleDeleteProduct","productId","updateRequestStatus","requestId","reason","responseData","request","handleBulkUpdate","requestIds","action","handleStatusUpdate","confirmStatusUpdate","toggleRequestSelection","includes","selectAllRequests","r","map","getStatusBadge","statusClasses","className","children","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Date","created_at","toLocaleDateString","farmer_id","product_name","value","onChange","target","farmer_name","farmer_phone","quantity","note","product_amount","handled_by_admin","checked","rows","placeholder","onSubmit","required","_c","$RefreshReg$"],"sources":["D:/FARMERS/frontend/src/dashboards/KebeleDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './KebeleDashboard.css';\r\n\r\nconst KebeleDashboard = () => {\r\n        const [activeTab, setActiveTab] = useState('overview');\r\n        const [user, setUser] = useState(null);\r\n        const navigate = useNavigate();\r\n\r\n        // Farmer Management State\r\n        const [farmers, setFarmers] = useState([]);\r\n        const [showFarmerModal, setShowFarmerModal] = useState(false);\r\n        const [editingFarmer, setEditingFarmer] = useState(null);\r\n        const [farmerForm, setFarmerForm] = useState({\r\n            fullName: '',\r\n            phoneNumber: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        });\r\n\r\n        // Product Management State\r\n        const [products, setProducts] = useState([]);\r\n        const [showProductModal, setShowProductModal] = useState(false);\r\n        const [editingProduct, setEditingProduct] = useState(null);\r\n        const [productForm, setProductForm] = useState({\r\n            name: '',\r\n            description: '',\r\n            category: '',\r\n            amount: ''\r\n        });\r\n\r\n        // Request Management State\r\n        const [requests, setRequests] = useState([]);\r\n        const [selectedRequests, setSelectedRequests] = useState([]);\r\n        const [showRequestModal, setShowRequestModal] = useState(false);\r\n        const [selectedRequest, setSelectedRequest] = useState(null);\r\n        const [requestStatus, setRequestStatus] = useState('');\r\n        const [decisionReason, setDecisionReason] = useState('');\r\n        const [bulkAction, setBulkAction] = useState('');\r\n\r\n        // Stats State\r\n        const [stats, setStats] = useState({\r\n            totalRequests: 0,\r\n            pendingRequests: 0,\r\n            approvedRequests: 0,\r\n            rejectedRequests: 0,\r\n            totalFarmers: 0,\r\n            totalProducts: 0\r\n        });\r\n\r\n        useEffect(() => {\r\n            // Check authentication\r\n            const token = localStorage.getItem('token');\r\n            const userData = JSON.parse(localStorage.getItem('user') || 'null');\r\n            const userType = localStorage.getItem('userType');\r\n\r\n            if (!token || userType !== 'Kebele' || !userData) {\r\n                navigate('/login');\r\n                return;\r\n            }\r\n\r\n            setUser(userData);\r\n            fetchDashboardData();\r\n        }, [navigate]);\r\n\r\n        const fetchDashboardData = async() => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n\r\n                // Fetch farmers in scope\r\n                const farmersResponse = await fetch('http://localhost:5000/api/admins/admins', {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                });\r\n\r\n                if (farmersResponse.ok) {\r\n                    const data = await farmersResponse.json();\r\n                    const farmersData = data.filter(item => item.type === 'farmer');\r\n                    setFarmers(farmersData);\r\n                    setStats(prev => ({...prev, totalFarmers: farmersData.length }));\r\n                }\r\n\r\n                // Fetch products\r\n                const productsResponse = await fetch('http://localhost:5000/api/admins/getproducts', {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                });\r\n\r\n                if (productsResponse.ok) {\r\n                    const productsData = await productsResponse.json();\r\n                    setProducts(productsData);\r\n                    setStats(prev => ({...prev, totalProducts: productsData.length }));\r\n                }\r\n\r\n                // Fetch requests using the approval routes\r\n                const requestsResponse = await fetch('http://localhost:5000/api/approval/requests', {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                });\r\n\r\n                if (requestsResponse.ok) {\r\n                    const requestsData = await requestsResponse.json();\r\n                    setRequests(requestsData);\r\n\r\n                    // Calculate stats from requests data\r\n                    const totalRequests = requestsData.length;\r\n                    const pendingRequests = requestsData.filter(req => req.status === 'pending').length;\r\n                    const approvedRequests = requestsData.filter(req => req.status === 'approved').length;\r\n                    const rejectedRequests = requestsData.filter(req => req.status === 'rejected').length;\r\n                    const acceptedRequests = requestsData.filter(req => req.status === 'accepted').length;\r\n\r\n                    setStats(prev => ({\r\n                        ...prev,\r\n                        totalRequests,\r\n                        pendingRequests,\r\n                        approvedRequests: approvedRequests + acceptedRequests,\r\n                        rejectedRequests\r\n                    }));\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error('Error fetching dashboard data:', error);\r\n            }\r\n        };\r\n\r\n        const handleLogout = () => {\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('user');\r\n            localStorage.removeItem('userType');\r\n            navigate('/login');\r\n        };\r\n\r\n        // Farmer Management Functions\r\n        const handleFarmerSubmit = async(e) => {\r\n            e.preventDefault();\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n\r\n                if (farmerForm.password !== farmerForm.confirmPassword) {\r\n                    alert('Passwords do not match');\r\n                    return;\r\n                }\r\n\r\n                const url = editingFarmer ?\r\n                    `http://localhost:5000/api/admins/edit/${editingFarmer.id}` :\r\n                    'http://localhost:5000/api/admins/createfarmer';\r\n\r\n                const method = editingFarmer ? 'PUT' : 'POST';\r\n\r\n                const response = await fetch(url, {\r\n                    method,\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${token}`\r\n                    },\r\n                    body: JSON.stringify({\r\n                        fullName: farmerForm.fullName,\r\n                        phoneNumber: farmerForm.phoneNumber,\r\n                        password: farmerForm.password,\r\n                        role: 'Farmer',\r\n                        region_name: user.region_name,\r\n                        zone_name: user.zone_name,\r\n                        woreda_name: user.woreda_name,\r\n                        kebele_name: user.kebele_name\r\n                    })\r\n                });\r\n\r\n                if (response.ok) {\r\n                    setShowFarmerModal(false);\r\n                    setEditingFarmer(null);\r\n                    setFarmerForm({ fullName: '', phoneNumber: '', password: '', confirmPassword: '' });\r\n                    fetchDashboardData();\r\n                    alert(editingFarmer ? 'Farmer updated successfully' : 'Farmer registered successfully');\r\n                } else {\r\n                    const errorData = await response.json();\r\n                    alert(errorData.message || 'Error processing farmer');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error processing farmer:', error);\r\n                alert('Error processing farmer');\r\n            }\r\n        };\r\n\r\n        const handleEditFarmer = (farmer) => {\r\n            setEditingFarmer(farmer);\r\n            setFarmerForm({\r\n                fullName: farmer.full_name,\r\n                phoneNumber: farmer.phone_number,\r\n                password: '',\r\n                confirmPassword: ''\r\n            });\r\n            setShowFarmerModal(true);\r\n        };\r\n\r\n        const handleDeleteFarmer = async(farmerId) => {\r\n            if (window.confirm('Are you sure you want to delete this farmer?')) {\r\n                try {\r\n                    const token = localStorage.getItem('token');\r\n                    const response = await fetch(`http://localhost:5000/api/admins/delete/${farmerId}`, {\r\n                        method: 'DELETE',\r\n                        headers: {\r\n                            'Authorization': `Bearer ${token}`\r\n                        }\r\n                    });\r\n\r\n                    if (response.ok) {\r\n                        fetchDashboardData();\r\n                        alert('Farmer deleted successfully');\r\n                    } else {\r\n                        const errorData = await response.json();\r\n                        alert(errorData.message || 'Error deleting farmer');\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error deleting farmer:', error);\r\n                    alert('Error deleting farmer');\r\n                }\r\n            }\r\n        };\r\n\r\n        // Product Management Functions\r\n        const handleProductSubmit = async(e) => {\r\n            e.preventDefault();\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n\r\n                const url = editingProduct ?\r\n                    `http://localhost:5000/api/admins/editproduct/${editingProduct.id}` :\r\n                    'http://localhost:5000/api/admins/addproduct';\r\n\r\n                const method = editingProduct ? 'PUT' : 'POST';\r\n\r\n                const response = await fetch(url, {\r\n                    method,\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${token}`\r\n                    },\r\n                    body: JSON.stringify({\r\n                        name: productForm.name,\r\n                        description: productForm.description,\r\n                        category: productForm.category,\r\n                        amount: productForm.amount\r\n                    })\r\n                });\r\n\r\n                if (response.ok) {\r\n                    setShowProductModal(false);\r\n                    setEditingProduct(null);\r\n                    setProductForm({ name: '', description: '', category: '', amount: '' });\r\n                    fetchDashboardData();\r\n                    alert(editingProduct ? 'Product updated successfully' : 'Product added successfully');\r\n                } else {\r\n                    const errorData = await response.json();\r\n                    alert(errorData.message || 'Error processing product');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error processing product:', error);\r\n                alert('Error processing product');\r\n            }\r\n        };\r\n\r\n        const handleEditProduct = (product) => {\r\n            setEditingProduct(product);\r\n            setProductForm({\r\n                name: product.name,\r\n                description: product.description,\r\n                category: product.category,\r\n                amount: product.amount\r\n            });\r\n            setShowProductModal(true);\r\n        };\r\n\r\n        const handleDeleteProduct = async(productId) => {\r\n            if (window.confirm('Are you sure you want to delete this product?')) {\r\n                try {\r\n                    const token = localStorage.getItem('token');\r\n                    const response = await fetch(`http://localhost:5000/api/admins/deleteproduct/${productId}`, {\r\n                        method: 'DELETE',\r\n                        headers: {\r\n                            'Authorization': `Bearer ${token}`\r\n                        }\r\n                    });\r\n\r\n                    if (response.ok) {\r\n                        fetchDashboardData();\r\n                        alert('Product deleted successfully');\r\n                    } else {\r\n                        const errorData = await response.json();\r\n                        alert(errorData.message || 'Error deleting product');\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error deleting product:', error);\r\n                    alert('Error deleting product');\r\n                }\r\n            }\r\n        };\r\n\r\n        // Request Management Functions\r\n        const updateRequestStatus = async(requestId, status, reason = '') => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n\r\n                const response = await fetch(`http://localhost:5000/api/approval/requests/${requestId}/status`, {\r\n                    method: 'PUT',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${token}`\r\n                    },\r\n                    body: JSON.stringify({ status, decisionReason: reason })\r\n                });\r\n\r\n                const responseData = await response.json();\r\n\r\n                if (response.ok) {\r\n                    setShowRequestModal(false);\r\n                    setSelectedRequest(null);\r\n                    setRequestStatus('');\r\n                    setDecisionReason('');\r\n                    fetchDashboardData();\r\n                    alert(`Request ${responseData.request.status} successfully`);\r\n                } else {\r\n                    alert(responseData.message || 'Error updating request');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error updating request:', error);\r\n                alert('Error updating request');\r\n            }\r\n        };\r\n\r\n        const handleBulkUpdate = async() => {\r\n            if (!bulkAction || selectedRequests.length === 0) {\r\n                alert('Please select an action and at least one request');\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                const response = await fetch('http://localhost:5000/api/approval/requests/bulk-update', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${token}`\r\n                    },\r\n                    body: JSON.stringify({\r\n                        requestIds: selectedRequests,\r\n                        action: bulkAction\r\n                    })\r\n                });\r\n\r\n                const responseData = await response.json();\r\n\r\n                if (response.ok) {\r\n                    setSelectedRequests([]);\r\n                    setBulkAction('');\r\n                    fetchDashboardData();\r\n                    alert('Bulk update completed successfully');\r\n                } else {\r\n                    alert(responseData.message || 'Error performing bulk update');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error performing bulk update:', error);\r\n                alert('Error performing bulk update');\r\n            }\r\n        };\r\n\r\n        const handleStatusUpdate = (request, status) => {\r\n            setSelectedRequest(request);\r\n            setRequestStatus(status);\r\n            setShowRequestModal(true);\r\n        };\r\n\r\n        const confirmStatusUpdate = () => {\r\n            if (selectedRequest && requestStatus) {\r\n                updateRequestStatus(selectedRequest.id, requestStatus, decisionReason);\r\n            }\r\n        };\r\n\r\n        const toggleRequestSelection = (requestId) => {\r\n            if (selectedRequests.includes(requestId)) {\r\n                setSelectedRequests(selectedRequests.filter(id => id !== requestId));\r\n            } else {\r\n                setSelectedRequests([...selectedRequests, requestId]);\r\n            }\r\n        };\r\n\r\n        const selectAllRequests = () => {\r\n            if (selectedRequests.length === requests.filter(r => r.status === 'pending').length) {\r\n                setSelectedRequests([]);\r\n            } else {\r\n                setSelectedRequests(requests.filter(r => r.status === 'pending').map(r => r.id));\r\n            }\r\n        };\r\n\r\n        const getStatusBadge = (status) => {\r\n            const statusClasses = {\r\n                'pending': 'status-pending',\r\n                'approved': 'status-approved',\r\n                'accepted': 'status-accepted',\r\n                'rejected': 'status-rejected'\r\n            };\r\n\r\n            return ( <\r\n                span className = { `status-badge ${statusClasses[status] || ''}` } > { status.charAt(0).toUpperCase() + status.slice(1) } <\r\n                /span>\r\n            );\r\n        };\r\n\r\n        if (!user) {\r\n            return <div className = \"loading\" > Loading... < /div>;\r\n        }\r\n\r\n        return ( <\r\n            div className = \"kebele-dashboard\" > { /* Sidebar */ } <\r\n            div className = \"sidebar\" >\r\n            <\r\n            h2 > Kebele Dashboard < /h2> <\r\n            nav >\r\n            <\r\n            button className = { activeTab === 'overview' ? 'active' : '' }\r\n            onClick = {\r\n                () => setActiveTab('overview') } > 📊Overview <\r\n            /button> <\r\n            button className = { activeTab === 'farmers' ? 'active' : '' }\r\n            onClick = {\r\n                () => setActiveTab('farmers') } > 👨‍🌾Farmers <\r\n            /button> <\r\n            button className = { activeTab === 'products' ? 'active' : '' }\r\n            onClick = {\r\n                () => setActiveTab('products') } > 🛒Products <\r\n            /button> <\r\n            button className = { activeTab === 'requests' ? 'active' : '' }\r\n            onClick = {\r\n                () => setActiveTab('requests') } > 📋Requests <\r\n            /button> <\r\n            /nav> <\r\n            /div>\r\n\r\n            { /* Main Content */ } <\r\n            div className = \"main-content\" >\r\n            <\r\n            header >\r\n            <\r\n            h1 > Welcome, { user.fullName }(Kebele Admin) < /h1> <\r\n            button onClick = { handleLogout }\r\n            className = \"logout-btn\" >\r\n            Logout <\r\n            /button> <\r\n            /header>\r\n\r\n            <\r\n            main > { /* Overview Tab */ } {\r\n                activeTab === 'overview' && ( <\r\n                    div className = \"overview-tab\" >\r\n                    <\r\n                    h2 > System Overview < /h2> <\r\n                    div className = \"stats-grid\" >\r\n                    <\r\n                    div className = \"stat-card\" >\r\n                    <\r\n                    h3 > { stats.totalRequests } < /h3> <\r\n                    p > Total Requests < /p> <\r\n                    /div> <\r\n                    div className = \"stat-card\" >\r\n                    <\r\n                    h3 > { stats.pendingRequests } < /h3> <\r\n                    p > Pending Requests < /p> <\r\n                    /div> <\r\n                    div className = \"stat-card\" >\r\n                    <\r\n                    h3 > { stats.approvedRequests } < /h3> <\r\n                    p > Approved Requests < /p> <\r\n                    /div> <\r\n                    div className = \"stat-card\" >\r\n                    <\r\n                    h3 > { stats.rejectedRequests } < /h3> <\r\n                    p > Rejected Requests < /p> <\r\n                    /div> <\r\n                    div className = \"stat-card\" >\r\n                    <\r\n                    h3 > { stats.totalFarmers } < /h3> <\r\n                    p > Farmers < /p> <\r\n                    /div> <\r\n                    div className = \"stat-card\" >\r\n                    <\r\n                    h3 > { stats.totalProducts } < /h3> <\r\n                    p > Products < /p> <\r\n                    /div> <\r\n                    /div>\r\n\r\n                    <\r\n                    div className = \"quick-actions\" >\r\n                    <\r\n                    h2 > Quick Actions < /h2> <\r\n                    div className = \"actions-grid\" >\r\n                    <\r\n                    button onClick = {\r\n                        () => setActiveTab('requests') }\r\n                    className = \"action-btn\" > 📋Manage Requests <\r\n                    /button> <\r\n                    button onClick = {\r\n                        () => setActiveTab('farmers') }\r\n                    className = \"action-btn\" > 👨‍🌾Manage Farmers <\r\n                    /button> <\r\n                    button onClick = {\r\n                        () => setActiveTab('products') }\r\n                    className = \"action-btn\" > 🛒Manage Products <\r\n                    /button> <\r\n                    button onClick = {\r\n                        () => setShowFarmerModal(true) }\r\n                    className = \"action-btn\" > ➕Register Farmer <\r\n                    /button> <\r\n                    button onClick = {\r\n                        () => setShowProductModal(true) }\r\n                    className = \"action-btn\" > ➕Add Product <\r\n                    /button> <\r\n                    /div> <\r\n                    /div> <\r\n                    /div>\r\n                )\r\n            }\r\n\r\n            { /* Farmers Tab */ } {\r\n                activeTab === 'farmers' && ( <\r\n                    div className = \"farmers-tab\" >\r\n                    <\r\n                    div className = \"tab-header\" >\r\n                    <\r\n                    h2 > Farmer Management < /h2> <\r\n                    p > Managing farmers in your kebele: { user.kebele_name } < /p> <\r\n                    button onClick = {\r\n                        () => setShowFarmerModal(true) }\r\n                    className = \"add-btn\" > ➕Register New Farmer <\r\n                    /button> <\r\n                    /div>\r\n\r\n                    <\r\n                    div className = \"farmers-list\" > {\r\n                        farmers.map((farmer) => ( <\r\n                            div key = { farmer.id }\r\n                            className = \"farmer-card\" >\r\n                            <\r\n                            div className = \"farmer-info\" >\r\n                            <\r\n                            h3 > { farmer.full_name } < /h3> <\r\n                            p > 📞Phone: { farmer.phone_number } < /p> <\r\n                            p > 📍Kebele: { farmer.kebele_name } < /p> <\r\n                            p > 📅Registered: { new Date(farmer.created_at).toLocaleDateString() } < /p> <\r\n                            /div> <\r\n                            div className = \"farmer-actions\" >\r\n                            <\r\n                            button onClick = {\r\n                                () => handleEditFarmer(farmer) }\r\n                            className = \"edit-btn\" > ✏️Edit <\r\n                            /button> <\r\n                            button onClick = {\r\n                                () => handleDeleteFarmer(farmer.id) }\r\n                            className = \"delete-btn\" > 🗑️Delete <\r\n                            /button> <\r\n                            /div> <\r\n                            div className = \"farmer-requests\" >\r\n                            <\r\n                            h4 > Recent Requests: < /h4> {\r\n                                requests\r\n                                    .filter(req => req.farmer_id === farmer.id)\r\n                                    .slice(0, 3)\r\n                                    .map(req => ( <\r\n                                        div key = { req.id }\r\n                                        className = \"request-item\" >\r\n                                        <\r\n                                        span className = \"product-name\" > { req.product_name } < /span> { getStatusBadge(req.status) } <\r\n                                        /div>\r\n                                    ))\r\n                            } {\r\n                                requests.filter(req => req.farmer_id === farmer.id).length === 0 && ( <\r\n                                    p > No requests from this farmer < /p>\r\n                                )\r\n                            } <\r\n                            /div> <\r\n                            /div>\r\n                        ))\r\n                    } {\r\n                        farmers.length === 0 && ( <\r\n                            p > No farmers found in your kebele. < /p>\r\n                        )\r\n                    } <\r\n                    /div> <\r\n                    /div>\r\n                )\r\n            }\r\n\r\n            { /* Products Tab */ } {\r\n                activeTab === 'products' && ( <\r\n                    div className = \"products-tab\" >\r\n                    <\r\n                    div className = \"tab-header\" >\r\n                    <\r\n                    h2 > Product Management < /h2> <\r\n                    p > Managing products in your kebele < /p> <\r\n                    button onClick = {\r\n                        () => setShowProductModal(true) }\r\n                    className = \"add-btn\" > ➕Add New Product <\r\n                    /button> <\r\n                    /div>\r\n\r\n                    <\r\n                    div className = \"products-list\" > {\r\n                        products.map((product) => ( <\r\n                            div key = { product.id }\r\n                            className = \"product-card\" >\r\n                            <\r\n                            div className = \"product-info\" >\r\n                            <\r\n                            h3 > { product.name } < /h3> <\r\n                            p > { product.description } < /p> <\r\n                            p > 📦Category: { product.category } < /p> <\r\n                            p > 💰Amount: { product.amount } < /p> <\r\n                            p > 📅Created: { new Date(product.created_at).toLocaleDateString() } < /p> <\r\n                            /div> <\r\n                            div className = \"product-actions\" >\r\n                            <\r\n                            button onClick = {\r\n                                () => handleEditProduct(product) }\r\n                            className = \"edit-btn\" > ✏️Edit <\r\n                            /button> <\r\n                            button onClick = {\r\n                                () => handleDeleteProduct(product.id) }\r\n                            className = \"delete-btn\" > 🗑️Delete <\r\n                            /button> <\r\n                            /div> <\r\n                            /div>\r\n                        ))\r\n                    } {\r\n                        products.length === 0 && ( <\r\n                            p > No products found. < /p>\r\n                        )\r\n                    } <\r\n                    /div> <\r\n                    /div>\r\n                )\r\n            }\r\n\r\n            { /* Requests Tab */ } {\r\n                activeTab === 'requests' && ( <\r\n                    div className = \"requests-tab\" >\r\n                    <\r\n                    div className = \"tab-header\" >\r\n                    <\r\n                    h2 > Request Management < /h2> <\r\n                    p > Manage farmer requests in your kebele: { user.kebele_name } < /p>\r\n\r\n                    {\r\n                        requests.filter(r => r.status === 'pending').length > 0 && ( <\r\n                            div className = \"bulk-actions\" >\r\n                            <\r\n                            select value = { bulkAction }\r\n                            onChange = {\r\n                                (e) => setBulkAction(e.target.value) } >\r\n                            <\r\n                            option value = \"\" > Select Bulk Action < /option> <\r\n                            option value = \"approve\" > Approve(Intelligent Decision) < /option> <\r\n                            option value = \"accept\" > Accept < /option> <\r\n                            option value = \"reject\" > Reject < /option> <\r\n                            /select> <\r\n                            button onClick = { handleBulkUpdate }\r\n                            className = \"bulk-btn\" >\r\n                            Apply to Selected({ selectedRequests.length }) <\r\n                            /button> <\r\n                            button onClick = { selectAllRequests }\r\n                            className = \"select-all-btn\" > {\r\n                                selectedRequests.length === requests.filter(r => r.status === 'pending').length ?\r\n                                'Deselect All' : 'Select All Pending'\r\n                            } <\r\n                            /button> <\r\n                            /div>\r\n                        )\r\n                    } <\r\n                    /div>\r\n\r\n                    <\r\n                    div className = \"requests-list\" > {\r\n                        requests.map((request) => ( <\r\n                                div key = { request.id }\r\n                                className = \"request-card\" >\r\n                                <\r\n                                div className = \"request-info\" >\r\n                                <\r\n                                h3 > { request.product_name } < /h3> <\r\n                                p > 👨‍🌾Farmer: { request.farmer_name }({ request.farmer_phone }) < /p> <\r\n                                p > 📦Quantity: { request.quantity } < /p> {\r\n                                    request.note && < p > 📝Note: { request.note } < /p>} <\r\n                                        p > 💰Product Amount: { request.product_amount } < /p> <\r\n                                        p > 📅Date: { new Date(request.created_at).toLocaleDateString() } < /p> { getStatusBadge(request.status) } {\r\n                                            request.handled_by_admin && ( <\r\n                                                p > 👤Handled by: { request.handled_by_admin } < /p>\r\n                                            )\r\n                                        } <\r\n                                        /div> <\r\n                                        div className = \"request-actions\" > {\r\n                                            request.status === 'pending' && ( <\r\n                                                >\r\n                                                <\r\n                                                div className = \"request-checkbox\" >\r\n                                                <\r\n                                                input type = \"checkbox\"\r\n                                                checked = { selectedRequests.includes(request.id) }\r\n                                                onChange = {\r\n                                                    () => toggleRequestSelection(request.id) }\r\n                                                /> <\r\n                                                label > Select < /label> <\r\n                                                /div> <\r\n                                                div className = \"status-options\" >\r\n                                                <\r\n                                                label >\r\n                                                <\r\n                                                input type = \"radio\"\r\n                                                name = { `status-${request.id}` }\r\n                                                onChange = {\r\n                                                    () => handleStatusUpdate(request, 'approve') }\r\n                                                />\r\n                                                Approve(Intelligent) <\r\n                                                /label> <\r\n                                                label >\r\n                                                <\r\n                                                input type = \"radio\"\r\n                                                name = { `status-${request.id}` }\r\n                                                onChange = {\r\n                                                    () => handleStatusUpdate(request, 'accept') }\r\n                                                />\r\n                                                Accept <\r\n                                                /label> <\r\n                                                label >\r\n                                                <\r\n                                                input type = \"radio\"\r\n                                                name = { `status-${request.id}` }\r\n                                                onChange = {\r\n                                                    () => handleStatusUpdate(request, 'reject') }\r\n                                                />\r\n                                                Reject <\r\n                                                /label> <\r\n                                                /div> <\r\n                                                />\r\n                                            )\r\n                                        } {\r\n                                            (request.status === 'accepted' || request.status === 'approved' || request.status === 'rejected') && ( <\r\n                                                p > Processed < /p>\r\n                                            )\r\n                                        } <\r\n                                        /div> <\r\n                                        /div>\r\n                                ))\r\n                        } {\r\n                            requests.length === 0 && ( <\r\n                                p > No requests found in your kebele. < /p>\r\n                            )\r\n                        } <\r\n                        /div>\r\n\r\n                        { /* Status Update Modal */ } {\r\n                            showRequestModal && selectedRequest && ( <\r\n                                div className = \"modal\" >\r\n                                <\r\n                                div className = \"modal-content\" >\r\n                                <\r\n                                h3 > Update Request Status < /h3> <\r\n                                p >\r\n                                You are about to update the request\r\n                                for \"{selectedRequest.product_name}\"\r\n                                from { selectedRequest.farmer_name }. <\r\n                                /p>\r\n\r\n                                {\r\n                                    requestStatus === 'approve' && ( <\r\n                                        div className = \"form-group\" >\r\n                                        <\r\n                                        label > Decision Reason(Optional): < /label> <\r\n                                        textarea value = { decisionReason }\r\n                                        onChange = {\r\n                                            (e) => setDecisionReason(e.target.value) }\r\n                                        rows = \"3\"\r\n                                        placeholder = \"Add any notes about your decision...\" /\r\n                                        >\r\n                                        <\r\n                                        /div>\r\n                                    )\r\n                                }\r\n\r\n                                <\r\n                                div className = \"modal-actions\" >\r\n                                <\r\n                                button onClick = { confirmStatusUpdate } >\r\n                                Confirm { requestStatus === 'approve' ? 'Intelligent Approval' : requestStatus } <\r\n                                /button> <\r\n                                button onClick = {\r\n                                    () => {\r\n                                        setShowRequestModal(false);\r\n                                        setSelectedRequest(null);\r\n                                        setRequestStatus('');\r\n                                        setDecisionReason('');\r\n                                    }\r\n                                } >\r\n                                Cancel <\r\n                                /button> <\r\n                                /div> <\r\n                                /div> <\r\n                                /div>\r\n                            )\r\n                        } <\r\n                        /div>\r\n                    )\r\n                }\r\n\r\n                { /* Farmer Modal */ } {\r\n                    showFarmerModal && ( <\r\n                        div className = \"modal\" >\r\n                        <\r\n                        div className = \"modal-content\" >\r\n                        <\r\n                        h3 > { editingFarmer ? 'Edit Farmer' : 'Register New Farmer' } < /h3> <\r\n                        form onSubmit = { handleFarmerSubmit } >\r\n                        <\r\n                        div className = \"form-group\" >\r\n                        <\r\n                        label > Full Name: < /label> <\r\n                        input type = \"text\"\r\n                        value = { farmerForm.fullName }\r\n                        onChange = {\r\n                            (e) => setFarmerForm({...farmerForm, fullName: e.target.value }) }\r\n                        required /\r\n                        >\r\n                        <\r\n                        /div> <\r\n                        div className = \"form-group\" >\r\n                        <\r\n                        label > Phone Number: < /label> <\r\n                        input type = \"tel\"\r\n                        value = { farmerForm.phoneNumber }\r\n                        onChange = {\r\n                            (e) => setFarmerForm({...farmerForm, phoneNumber: e.target.value }) }\r\n                        required /\r\n                        >\r\n                        <\r\n                        /div> <\r\n                        div className = \"form-group\" >\r\n                        <\r\n                        label > Password: < /label> <\r\n                        input type = \"password\"\r\n                        value = { farmerForm.password }\r\n                        onChange = {\r\n                            (e) => setFarmerForm({...farmerForm, password: e.target.value }) }\r\n                        required = {!editingFarmer }\r\n                        /> <\r\n                        /div> <\r\n                        div className = \"form-group\" >\r\n                        <\r\n                        label > Confirm Password: < /label> <\r\n                        input type = \"password\"\r\n                        value = { farmerForm.confirmPassword }\r\n                        onChange = {\r\n                            (e) => setFarmerForm({...farmerForm, confirmPassword: e.target.value }) }\r\n                        required = {!editingFarmer }\r\n                        /> <\r\n                        /div> <\r\n                        div className = \"modal-actions\" >\r\n                        <\r\n                        button type = \"submit\" > { editingFarmer ? 'Update Farmer' : 'Register Farmer' } < /button> <\r\n                        button type = \"button\"\r\n                        onClick = {\r\n                            () => {\r\n                                setShowFarmerModal(false);\r\n                                setEditingFarmer(null);\r\n                                setFarmerForm({ fullName: '', phoneNumber: '', password: '', confirmPassword: '' });\r\n                            }\r\n                        } >\r\n                        Cancel <\r\n                        /button> <\r\n                        /div> <\r\n                        /form> <\r\n                        /div> <\r\n                        /div>\r\n                    )\r\n                }\r\n\r\n                { /* Product Modal */ } {\r\n                    showProductModal && ( <\r\n                        div className = \"modal\" >\r\n                        <\r\n                        div className = \"modal-content\" >\r\n                        <\r\n                        h3 > { editingProduct ? 'Edit Product' : 'Add New Product' } < /h3> <\r\n                        form onSubmit = { handleProductSubmit } >\r\n                        <\r\n                        div className = \"form-group\" >\r\n                        <\r\n                        label > Product Name: < /label> <\r\n                        input type = \"text\"\r\n                        value = { productForm.name }\r\n                        onChange = {\r\n                            (e) => setProductForm({...productForm, name: e.target.value }) }\r\n                        required /\r\n                        >\r\n                        <\r\n                        /div> <\r\n                        div className = \"form-group\" >\r\n                        <\r\n                        label > Description: < /label> <\r\n                        textarea value = { productForm.description }\r\n                        onChange = {\r\n                            (e) => setProductForm({...productForm, description: e.target.value }) }\r\n                        rows = \"3\" /\r\n                        >\r\n                        <\r\n                        /div> <\r\n                        div className = \"form-group\" >\r\n                        <\r\n                        label > Category: < /label> <\r\n                        input type = \"text\"\r\n                        value = { productForm.category }\r\n                        onChange = {\r\n                            (e) => setProductForm({...productForm, category: e.target.value }) }\r\n                        required /\r\n                        >\r\n                        <\r\n                        /div> <\r\n                        div className = \"form-group\" >\r\n                        <\r\n                        label > Amount: < /label> <\r\n                        input type = \"number\"\r\n                        value = { productForm.amount }\r\n                        onChange = {\r\n                            (e) => setProductForm({...productForm, amount: e.target.value }) }\r\n                        required /\r\n                        >\r\n                        <\r\n                        /div> <\r\n                        div className = \"modal-actions\" >\r\n                        <\r\n                        button type = \"submit\" > { editingProduct ? 'Update Product' : 'Add Product' } < /button> <\r\n                        button type = \"button\"\r\n                        onClick = {\r\n                            () => {\r\n                                setShowProductModal(false);\r\n                                setEditingProduct(null);\r\n                                setProductForm({ name: '', description: '', category: '', amount: '' });\r\n                            }\r\n                        } >\r\n                        Cancel <\r\n                        /button> <\r\n                        /div> <\r\n                        /form> <\r\n                        /div> <\r\n                        /div>\r\n                    )\r\n                } <\r\n                /main> <\r\n                /div> <\r\n                /div>\r\n            );\r\n        };\r\n\r\n        export default KebeleDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}