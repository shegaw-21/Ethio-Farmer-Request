{"ast":null,"code":"var _jsxFileName = \"D:\\\\FARMERS\\\\frontend\\\\src\\\\components\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const {\n    login\n  } = useAuth();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      // Replace with your actual API call\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        login(data.user, data.token);\n      } else {\n        setError(data.message || 'Login failed');\n      }\n    } catch (error) {\n      setError('Network error. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Login \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), \" \", error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: [\" \", error, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 26\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 73\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Login \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 18\n  }, this);\n};\n_s(LoginPage, \"4RLANKyFo/Om4cnGrk9tE+D77YQ=\", false, function () {\n  return [useAuth];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useAuth","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","error","setError","login","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","user","token","message","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/FARMERS/frontend/src/components/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst LoginPage = () => {\r\n        const [email, setEmail] = useState('');\r\n        const [password, setPassword] = useState('');\r\n        const [error, setError] = useState('');\r\n        const { login } = useAuth();\r\n\r\n        const handleSubmit = async(e) => {\r\n            e.preventDefault();\r\n            setError('');\r\n\r\n            try {\r\n                // Replace with your actual API call\r\n                const response = await fetch('/api/auth/login', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({ email, password }),\r\n                });\r\n\r\n                const data = await response.json();\r\n\r\n                if (response.ok) {\r\n                    login(data.user, data.token);\r\n                } else {\r\n                    setError(data.message || 'Login failed');\r\n                }\r\n            } catch (error) {\r\n                setError('Network error. Please try again.');\r\n            }\r\n        };\r\n\r\n        return ( <\r\n            div className = \"login-container\" >\r\n            <\r\n            form onSubmit = { handleSubmit }\r\n            className = \"login-form\" >\r\n            <\r\n            h2 > Login < /h2> {\r\n                error && < div className = \"error\" > { error } < /div>} <\r\n                    input\r\n                type = \"email\"\r\n                placeholder = \"Email\"\r\n                value = { email }\r\n                onChange = {\r\n                    (e) => setEmail(e.target.value) }\r\n                required\r\n                    /\r\n                    >\r\n                    <\r\n                    input\r\n                type = \"password\"\r\n                placeholder = \"Password\"\r\n                value = { password }\r\n                onChange = {\r\n                    (e) => setPassword(e.target.value) }\r\n                required\r\n                    /\r\n                    >\r\n                    <\r\n                    button type = \"submit\" > Login < /button> <\r\n                    /form> <\r\n                    /div>\r\n            );\r\n        };\r\n\r\n        export default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}