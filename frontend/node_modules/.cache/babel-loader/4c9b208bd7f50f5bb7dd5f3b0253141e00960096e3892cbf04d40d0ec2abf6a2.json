{"ast":null,"code":"var _jsxFileName = \"D:\\\\FARMERS\\\\frontend\\\\src\\\\dashboards\\\\RegionDashboard.js\",\n  _s = $RefreshSig$();\n// File: RegionDashboard.js (FIXED VERSION)\nimport React, { useState, useEffect } from 'react';\nimport { Users, Package, FileText, CheckCircle, XCircle, Clock, Plus, Edit, Trash2, Eye, Search, Moon, Sun, Bell, Settings, LogOut, Building, Home, Wheat, AlertTriangle, BarChart3, Phone, MapPin, Target, Truck, DollarSign } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RegionDashboard = () => {\n  _s();\n  // State management\n  const [darkMode, setDarkMode] = useState(false);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Data states\n  const [admins, setAdmins] = useState([]);\n  const [farmers, setFarmers] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [requests, setRequests] = useState([]);\n  const [reports, setReports] = useState([]);\n  const [statistics, setStatistics] = useState({});\n  const [myReports, setMyReports] = useState([]);\n  const [myProducts, setMyProducts] = useState([]);\n  const [otherProducts, setOtherProducts] = useState([]);\n\n  // Filter states\n  const [requestFilter, setRequestFilter] = useState('all');\n  const [reportFilter, setReportFilter] = useState('all');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [farmerFilter, setFarmerFilter] = useState('all');\n  const [productFilter, setProductFilter] = useState('all');\n\n  // Modal states\n  const [showAdminModal, setShowAdminModal] = useState(false);\n  const [showProductModal, setShowProductModal] = useState(false);\n  const [showReportModal, setShowReportModal] = useState(false);\n  const [showFarmerModal, setShowFarmerModal] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [modalMode, setModalMode] = useState('create');\n\n  // Form states - FIXED: Added confirmPassword field\n  const [adminForm, setAdminForm] = useState({\n    fullName: '',\n    phoneNumber: '',\n    password: '',\n    confirmPassword: '',\n    // ADDED THIS FIELD\n    role: 'Zone',\n    region_name: '',\n    zone_name: '',\n    woreda_name: '',\n    kebele_name: ''\n  });\n  const [productForm, setProductForm] = useState({\n    name: '',\n    category: '',\n    sub_category: '',\n    price: '',\n    amount: '',\n    unit: '',\n    description: '',\n    manufacturer: '',\n    expiry_date: ''\n  });\n  const [reportForm, setReportForm] = useState({\n    reported_admin_id: '',\n    report_type: 'Misconduct',\n    title: '',\n    description: '',\n    evidence: '',\n    priority: 'Medium'\n  });\n  const [farmerForm, setFarmerForm] = useState({\n    full_name: '',\n    phone_number: '',\n    password: '',\n    region_name: '',\n    zone_name: '',\n    woreda_name: '',\n    kebele_name: '',\n    land_size_hectares: '',\n    crop_types: '',\n    crops_season: '',\n    land_type: '',\n    farming_experience: '',\n    irrigation_type: '',\n    farming_method: '',\n    primary_crops: '',\n    secondary_crops: '',\n    soil_type: '',\n    has_livestock: false,\n    livestock_types: '',\n    annual_income: '',\n    education_level: ''\n  });\n\n  // API base URL - FIXED: Correct endpoint structure\n  const API_BASE = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n  // Utility function for API calls - FIXED: Proper error handling\n  const apiCall = async (endpoint, options = {}) => {\n    const token = localStorage.getItem('token');\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n        ...options.headers\n      },\n      ...options\n    };\n    if (options.body) {\n      config.body = JSON.stringify(options.body);\n    }\n    try {\n      const response = await fetch(`${API_BASE}${endpoint}`, config);\n      if (!response.ok) {\n        if (response.status === 401) {\n          handleLogout();\n          throw new Error('Authentication failed. Please login again.');\n        }\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || `API call failed with status ${response.status}`);\n      }\n      return await response.json();\n    } catch (err) {\n      console.error('API call error:', err);\n      throw new Error(err.message || 'API call failed');\n    }\n  };\n\n  // Logout function\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  };\n\n  // Data fetching functions - FIXED: Correct endpoints\n  const fetchAdmins = async () => {\n    try {\n      const data = await apiCall('/api/admins/admins');\n      // Filter to only show Zone admins in the region\n      const user = JSON.parse(localStorage.getItem('user') || '{}');\n      const regionAdmins = data.filter(admin => admin.role === 'Zone' && admin.region_name === user.region_name);\n      setAdmins(regionAdmins);\n    } catch (err) {\n      setError('Failed to fetch admins: ' + err.message);\n    }\n  };\n  const fetchFarmers = async () => {\n    try {\n      const data = await apiCall('/api/admins/farmers');\n      // Handle both response formats\n      const farmersData = data.farmers || data;\n      // Filter farmers by region\n      const user = JSON.parse(localStorage.getItem('user') || '{}');\n      const regionFarmers = farmersData.filter(farmer => farmer.region_name === user.region_name);\n      setFarmers(regionFarmers);\n    } catch (err) {\n      setError('Failed to fetch farmers: ' + err.message);\n    }\n  };\n  const fetchProducts = async () => {\n    try {\n      const data = await apiCall('/api/admins/getproducts');\n      setProducts(data);\n    } catch (err) {\n      setError('Failed to fetch products: ' + err.message);\n    }\n  };\n  const fetchMyProducts = async () => {\n    try {\n      const data = await apiCall('/api/admins/myproducts');\n      setMyProducts(data);\n    } catch (err) {\n      setError('Failed to fetch my products: ' + err.message);\n    }\n  };\n  const fetchOtherProducts = async () => {\n    try {\n      const data = await apiCall('/api/admins/otherproducts');\n      setOtherProducts(data);\n    } catch (err) {\n      setError('Failed to fetch other products: ' + err.message);\n    }\n  };\n  const fetchRequests = async () => {\n    try {\n      const data = await apiCall('/api/admins/getrequests');\n      // Handle both response formats\n      const requestsData = data.requests || data;\n      // Filter requests by region\n      const user = JSON.parse(localStorage.getItem('user') || '{}');\n      const regionRequests = requestsData.filter(request => request.region_name === user.region_name);\n      setRequests(regionRequests);\n    } catch (err) {\n      setError('Failed to fetch requests: ' + err.message);\n    }\n  };\n  const fetchReports = async () => {\n    try {\n      const data = await apiCall('/api/admins/reports');\n      setReports(data.reports || data);\n    } catch (err) {\n      setError('Failed to fetch reports: ' + err.message);\n    }\n  };\n  const fetchMyReports = async () => {\n    try {\n      const data = await apiCall('/api/admins/reports/my');\n      setMyReports(data.reports || data);\n    } catch (err) {\n      setError('Failed to fetch my reports: ' + err.message);\n    }\n  };\n  const fetchStatistics = async () => {\n    try {\n      const data = await apiCall('/api/admins/reports/statistics');\n      setStatistics(data.statistics || data);\n    } catch (err) {\n      setError('Failed to fetch statistics: ' + err.message);\n    }\n  };\n\n  // CRUD operations - FIXED: Proper API endpoints and data formatting\n  const createAdmin = async () => {\n    try {\n      setLoading(true);\n\n      // Validate password confirmation\n      if (adminForm.password !== adminForm.confirmPassword) {\n        throw new Error('Password and confirmation do not match');\n      }\n\n      // Prepare data for API\n      const adminData = {\n        fullName: adminForm.fullName,\n        phoneNumber: adminForm.phoneNumber,\n        password: adminForm.password,\n        role: adminForm.role,\n        region_name: adminForm.region_name,\n        zone_name: adminForm.zone_name,\n        woreda_name: adminForm.woreda_name,\n        kebele_name: adminForm.kebele_name\n      };\n      await apiCall('/api/admins/register', {\n        method: 'POST',\n        body: adminData\n      });\n      setSuccess('Zone admin created successfully');\n      setShowAdminModal(false);\n      resetAdminForm();\n      fetchAdmins();\n    } catch (err) {\n      setError('Failed to create admin: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateAdmin = async () => {\n    try {\n      setLoading(true);\n\n      // Validate password confirmation if password is being updated\n      if (adminForm.password && adminForm.password !== adminForm.confirmPassword) {\n        throw new Error('Password and confirmation do not match');\n      }\n\n      // Prepare data for API\n      const adminData = {\n        fullName: adminForm.fullName,\n        phoneNumber: adminForm.phoneNumber,\n        ...(adminForm.password && {\n          password: adminForm.password\n        }),\n        region_name: adminForm.region_name,\n        zone_name: adminForm.zone_name,\n        woreda_name: adminForm.woreda_name,\n        kebele_name: adminForm.kebele_name\n      };\n      await apiCall(`/api/admins/edit/${selectedItem.id}`, {\n        method: 'PUT',\n        body: adminData\n      });\n      setSuccess('Admin updated successfully');\n      setShowAdminModal(false);\n      resetAdminForm();\n      fetchAdmins();\n    } catch (err) {\n      setError('Failed to update admin: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createProduct = async () => {\n    try {\n      setLoading(true);\n\n      // Validate required fields\n      if (!productForm.name || !productForm.category || !productForm.amount || !productForm.price || !productForm.sub_category || !productForm.unit || !productForm.expiry_date) {\n        throw new Error('All required fields must be filled');\n      }\n      await apiCall('/api/admins/addproduct', {\n        method: 'POST',\n        body: productForm\n      });\n      setSuccess('Product created successfully');\n      setShowProductModal(false);\n      resetProductForm();\n      fetchProducts();\n      fetchMyProducts();\n    } catch (err) {\n      setError('Failed to create product: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateProduct = async () => {\n    try {\n      setLoading(true);\n      await apiCall(`/api/admins/editproduct/${selectedItem.id}`, {\n        method: 'PUT',\n        body: productForm\n      });\n      setSuccess('Product updated successfully');\n      setShowProductModal(false);\n      resetProductForm();\n      fetchProducts();\n      fetchMyProducts();\n    } catch (err) {\n      setError('Failed to update product: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const deleteProduct = async productId => {\n    if (!window.confirm('Are you sure you want to delete this product?')) return;\n    try {\n      setLoading(true);\n      await apiCall(`/api/admins/deleteproduct/${productId}`, {\n        method: 'DELETE'\n      });\n      setSuccess('Product deleted successfully');\n      fetchProducts();\n      fetchMyProducts();\n    } catch (err) {\n      setError('Failed to delete product: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Request status update\n  const updateRequestStatus = async (requestId, status, feedback = '') => {\n    try {\n      setLoading(true);\n      await apiCall(`/api/admins/editrequest/${requestId}/status`, {\n        method: 'PUT',\n        body: {\n          status,\n          feedback\n        }\n      });\n      setSuccess(`Request ${status.toLowerCase()} successfully`);\n      fetchRequests();\n    } catch (err) {\n      setError('Failed to update request status: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const deleteRejectedRequest = async requestId => {\n    if (!window.confirm('Are you sure you want to delete this rejected request?')) return;\n    try {\n      setLoading(true);\n      await apiCall(`/api/admins/deleterequest/${requestId}`, {\n        method: 'DELETE'\n      });\n      setSuccess('Rejected request deleted successfully');\n      fetchRequests();\n    } catch (err) {\n      setError('Failed to delete request: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createReport = async () => {\n    try {\n      setLoading(true);\n\n      // Validate required fields\n      if (!reportForm.reported_admin_id || !reportForm.report_type || !reportForm.title || !reportForm.description) {\n        throw new Error('Reported admin ID, type, title, and description are required');\n      }\n      await apiCall('/api/admins/reports', {\n        method: 'POST',\n        body: reportForm\n      });\n      setSuccess('Report submitted successfully');\n      setShowReportModal(false);\n      resetReportForm();\n      fetchReports();\n      fetchMyReports();\n    } catch (err) {\n      setError('Failed to create report: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateReportStatus = async (reportId, status, resolutionNotes = '') => {\n    try {\n      setLoading(true);\n      await apiCall(`/api/admins/reports/${reportId}/status`, {\n        method: 'PUT',\n        body: {\n          status,\n          resolution_notes: resolutionNotes\n        }\n      });\n      setSuccess('Report status updated successfully');\n      fetchReports();\n      fetchMyReports();\n    } catch (err) {\n      setError('Failed to update report status: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Form reset functions - FIXED: Added confirmPassword field\n  const resetAdminForm = () => {\n    setAdminForm({\n      fullName: '',\n      phoneNumber: '',\n      password: '',\n      confirmPassword: '',\n      // ADDED THIS FIELD\n      role: 'Zone',\n      region_name: '',\n      zone_name: '',\n      woreda_name: '',\n      kebele_name: ''\n    });\n  };\n  const resetProductForm = () => {\n    setProductForm({\n      name: '',\n      category: '',\n      sub_category: '',\n      price: '',\n      amount: '',\n      unit: '',\n      description: '',\n      manufacturer: '',\n      expiry_date: ''\n    });\n  };\n  const resetReportForm = () => {\n    setReportForm({\n      reported_admin_id: '',\n      report_type: 'Misconduct',\n      title: '',\n      description: '',\n      evidence: '',\n      priority: 'Medium'\n    });\n  };\n  const resetFarmerForm = () => {\n    setFarmerForm({\n      full_name: '',\n      phone_number: '',\n      password: '',\n      region_name: '',\n      zone_name: '',\n      woreda_name: '',\n      kebele_name: '',\n      land_size_hectares: '',\n      crop_types: '',\n      crops_season: '',\n      land_type: '',\n      farming_experience: '',\n      irrigation_type: '',\n      farming_method: '',\n      primary_crops: '',\n      secondary_crops: '',\n      soil_type: '',\n      has_livestock: false,\n      livestock_types: '',\n      annual_income: '',\n      education_level: ''\n    });\n  };\n\n  // Modal functions - FIXED: Proper form population\n  const openAdminModal = (mode, admin = null) => {\n    setModalMode(mode);\n    setSelectedItem(admin);\n    if (admin && mode === 'edit') {\n      setAdminForm({\n        fullName: admin.full_name || '',\n        phoneNumber: admin.phone_number || '',\n        password: '',\n        confirmPassword: '',\n        // ADDED THIS FIELD\n        role: admin.role || 'Zone',\n        region_name: admin.region_name || '',\n        zone_name: admin.zone_name || '',\n        woreda_name: admin.woreda_name || '',\n        kebele_name: admin.kebele_name || ''\n      });\n    } else {\n      resetAdminForm();\n    }\n    setShowAdminModal(true);\n  };\n  const openProductModal = (mode, product = null) => {\n    setModalMode(mode);\n    setSelectedItem(product);\n    if (product && mode === 'edit') {\n      setProductForm({\n        name: product.name || '',\n        category: product.category || '',\n        sub_category: product.sub_category || '',\n        price: product.price || '',\n        amount: product.amount || '',\n        unit: product.unit || '',\n        description: product.description || '',\n        manufacturer: product.manufacturer || '',\n        expiry_date: product.expiry_date || ''\n      });\n    } else {\n      resetProductForm();\n    }\n    setShowProductModal(true);\n  };\n  const openReportModal = (mode, report = null) => {\n    setModalMode(mode);\n    setSelectedItem(report);\n    if (report && mode === 'edit') {\n      setReportForm({\n        reported_admin_id: report.reported_admin_id || '',\n        report_type: report.report_type || 'Misconduct',\n        title: report.title || '',\n        description: report.description || '',\n        evidence: report.evidence || '',\n        priority: report.priority || 'Medium'\n      });\n    } else {\n      resetReportForm();\n    }\n    setShowReportModal(true);\n  };\n  const openFarmerModal = (mode, farmer = null) => {\n    setModalMode(mode);\n    setSelectedItem(farmer);\n    if (farmer && mode === 'edit') {\n      setFarmerForm({\n        full_name: farmer.full_name || '',\n        phone_number: farmer.phone_number || '',\n        password: '',\n        region_name: farmer.region_name || '',\n        zone_name: farmer.zone_name || '',\n        woreda_name: farmer.woreda_name || '',\n        kebele_name: farmer.kebele_name || '',\n        land_size_hectares: farmer.land_size_hectares || '',\n        crop_types: farmer.crop_types || '',\n        crops_season: farmer.crops_season || '',\n        land_type: farmer.land_type || '',\n        farming_experience: farmer.farming_experience || '',\n        irrigation_type: farmer.irrigation_type || '',\n        farming_method: farmer.farming_method || '',\n        primary_crops: farmer.primary_crops || '',\n        secondary_crops: farmer.secondary_crops || '',\n        soil_type: farmer.soil_type || '',\n        has_livestock: farmer.has_livestock || false,\n        livestock_types: farmer.livestock_types || '',\n        annual_income: farmer.annual_income || '',\n        education_level: farmer.education_level || ''\n      });\n    } else {\n      resetFarmerForm();\n    }\n    setShowFarmerModal(true);\n  };\n\n  // Filter functions\n  const filteredRequests = requests.filter(request => {\n    const matchesSearch = request.farmer_name && request.farmer_name.toLowerCase().includes(searchTerm.toLowerCase()) || request.product_name && request.product_name.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesFilter = requestFilter === 'all' || request.status && request.status.toLowerCase().includes(requestFilter.toLowerCase());\n    return matchesSearch && matchesFilter;\n  });\n  const filteredFarmers = farmers.filter(farmer => {\n    const matchesSearch = farmer.full_name && farmer.full_name.toLowerCase().includes(searchTerm.toLowerCase()) || farmer.phone_number && farmer.phone_number.includes(searchTerm);\n    const matchesFilter = farmerFilter === 'all' || farmer.zone_name && farmer.zone_name.toLowerCase().includes(farmerFilter.toLowerCase());\n    return matchesSearch && matchesFilter;\n  });\n  const filteredProducts = products.filter(product => {\n    const matchesSearch = product.name && product.name.toLowerCase().includes(searchTerm.toLowerCase()) || product.category && product.category.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesFilter = productFilter === 'all' || product.category && product.category.toLowerCase().includes(productFilter.toLowerCase());\n    return matchesSearch && matchesFilter;\n  });\n  const filteredReports = reports.filter(report => {\n    const matchesSearch = report.title && report.title.toLowerCase().includes(searchTerm.toLowerCase()) || report.description && report.description.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesFilter = reportFilter === 'all' || report.status && report.status.toLowerCase().includes(reportFilter.toLowerCase());\n    return matchesSearch && matchesFilter;\n  });\n\n  // Fetch all data on component mount\n  useEffect(() => {\n    const fetchEverything = async () => {\n      try {\n        await Promise.all([fetchAdmins(), fetchFarmers(), fetchProducts(), fetchMyProducts(), fetchOtherProducts(), fetchRequests(), fetchReports(), fetchMyReports(), fetchStatistics()]);\n      } catch (err) {\n        setError('Failed to fetch data: ' + err.message);\n      }\n    };\n    fetchEverything();\n  }, []);\n\n  // Clear messages after 5 seconds\n  useEffect(() => {\n    if (error || success) {\n      const timer = setTimeout(() => {\n        setError('');\n        setSuccess('');\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [error, success]);\n\n  // FIXED: Main UI with proper functionality\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `min-h-screen ${darkMode ? 'bg-gray-900' : 'bg-gray-50'}`,\n    children: [\" \", \" \", showAdminModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `w-full max-w-md p-6 rounded-lg shadow-lg ${darkMode ? 'bg-gray-800' : 'bg-white'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: `text-lg font-semibold mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`,\n          children: [\" \", modalMode === 'create' ? 'Add Zone Admin' : modalMode === 'edit' ? 'Edit Admin' : 'Admin Details', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: `block text-sm font-medium mb-1 ${darkMode ? 'text-gray-300' : 'text-gray-700'}`,\n              children: \"Full Name \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: adminForm.fullName,\n              onChange: e => setAdminForm({\n                ...adminForm,\n                fullName: e.target.value\n              }),\n              disabled: modalMode === 'view',\n              className: `w-full px-3 py-2 rounded-lg border ${darkMode ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400' : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 25\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: `block text-sm font-medium mb-1 ${darkMode ? 'text-gray-300' : 'text-gray-700'}`,\n              children: \"Phone Number \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: adminForm.phoneNumber,\n              onChange: e => setAdminForm({\n                ...adminForm,\n                phoneNumber: e.target.value\n              }),\n              disabled: modalMode === 'view',\n              className: `w-full px-3 py-2 rounded-lg border ${darkMode ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400' : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 25\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 17\n          }, this), modalMode !== 'view' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: `block text-sm font-medium mb-1 ${darkMode ? 'text-gray-300' : 'text-gray-700'}`,\n                children: \"Password \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 777,\n                columnNumber: 25\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                value: adminForm.password,\n                onChange: e => setAdminForm({\n                  ...adminForm,\n                  password: e.target.value\n                }),\n                className: `w-full px-3 py-2 rounded-lg border ${darkMode ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400' : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500'}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 33\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: `block text-sm font-medium mb-1 ${darkMode ? 'text-gray-300' : 'text-gray-700'}`,\n                children: \"Confirm Password \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 795,\n                columnNumber: 25\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                value: adminForm.confirmPassword,\n                onChange: e => setAdminForm({\n                  ...adminForm,\n                  confirmPassword: e.target.value\n                }),\n                className: `w-full px-3 py-2 rounded-lg border ${darkMode ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400' : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500'}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 798,\n                columnNumber: 33\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 793,\n              columnNumber: 25\n            }, this), \" \"]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: `block text-sm font-medium mb-1 ${darkMode ? 'text-gray-300' : 'text-gray-700'}`,\n              children: \"Zone \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 816,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: adminForm.zone_name,\n              onChange: e => setAdminForm({\n                ...adminForm,\n                zone_name: e.target.value\n              }),\n              disabled: modalMode === 'view',\n              className: `w-full px-3 py-2 rounded-lg border ${darkMode ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400' : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 25\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-3 mt-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowAdminModal(false),\n            className: `px-4 py-2 rounded-lg ${darkMode ? 'bg-gray-600 text-white hover:bg-gray-700' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n            children: \"Cancel \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 17\n          }, this), \" \", modalMode !== 'view' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: modalMode === 'create' ? createAdmin : updateAdmin,\n            disabled: loading,\n            className: \"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg disabled:opacity-50\",\n            children: [loading ? 'Saving...' : modalMode === 'create' ? 'Create Admin' : 'Update Admin', \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 47\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 17\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 33\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 720,\n    columnNumber: 14\n  }, this);\n};\n_s(RegionDashboard, \"6bEDXr2fxVBt4FtqvZptw9E8c8o=\");\n_c = RegionDashboard;\nexport default RegionDashboard;\nvar _c;\n$RefreshReg$(_c, \"RegionDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Users","Package","FileText","CheckCircle","XCircle","Clock","Plus","Edit","Trash2","Eye","Search","Moon","Sun","Bell","Settings","LogOut","Building","Home","Wheat","AlertTriangle","BarChart3","Phone","MapPin","Target","Truck","DollarSign","jsxDEV","_jsxDEV","Fragment","_Fragment","RegionDashboard","_s","darkMode","setDarkMode","activeTab","setActiveTab","loading","setLoading","error","setError","success","setSuccess","admins","setAdmins","farmers","setFarmers","products","setProducts","requests","setRequests","reports","setReports","statistics","setStatistics","myReports","setMyReports","myProducts","setMyProducts","otherProducts","setOtherProducts","requestFilter","setRequestFilter","reportFilter","setReportFilter","searchTerm","setSearchTerm","farmerFilter","setFarmerFilter","productFilter","setProductFilter","showAdminModal","setShowAdminModal","showProductModal","setShowProductModal","showReportModal","setShowReportModal","showFarmerModal","setShowFarmerModal","selectedItem","setSelectedItem","modalMode","setModalMode","adminForm","setAdminForm","fullName","phoneNumber","password","confirmPassword","role","region_name","zone_name","woreda_name","kebele_name","productForm","setProductForm","name","category","sub_category","price","amount","unit","description","manufacturer","expiry_date","reportForm","setReportForm","reported_admin_id","report_type","title","evidence","priority","farmerForm","setFarmerForm","full_name","phone_number","land_size_hectares","crop_types","crops_season","land_type","farming_experience","irrigation_type","farming_method","primary_crops","secondary_crops","soil_type","has_livestock","livestock_types","annual_income","education_level","API_BASE","process","env","REACT_APP_API_URL","apiCall","endpoint","options","token","localStorage","getItem","config","headers","body","JSON","stringify","response","fetch","ok","status","handleLogout","Error","errorData","json","catch","message","err","console","removeItem","window","location","href","fetchAdmins","data","user","parse","regionAdmins","filter","admin","fetchFarmers","farmersData","regionFarmers","farmer","fetchProducts","fetchMyProducts","fetchOtherProducts","fetchRequests","requestsData","regionRequests","request","fetchReports","fetchMyReports","fetchStatistics","createAdmin","adminData","method","resetAdminForm","updateAdmin","id","createProduct","resetProductForm","updateProduct","deleteProduct","productId","confirm","updateRequestStatus","requestId","feedback","toLowerCase","deleteRejectedRequest","createReport","resetReportForm","updateReportStatus","reportId","resolutionNotes","resolution_notes","resetFarmerForm","openAdminModal","mode","openProductModal","product","openReportModal","report","openFarmerModal","filteredRequests","matchesSearch","farmer_name","includes","product_name","matchesFilter","filteredFarmers","filteredProducts","filteredReports","fetchEverything","Promise","all","timer","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","disabled","onClick","_c","$RefreshReg$"],"sources":["D:/FARMERS/frontend/src/dashboards/RegionDashboard.js"],"sourcesContent":["// File: RegionDashboard.js (FIXED VERSION)\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n    Users,\r\n    Package,\r\n    FileText,\r\n    CheckCircle,\r\n    XCircle,\r\n    Clock,\r\n    Plus,\r\n    Edit,\r\n    Trash2,\r\n    Eye,\r\n    Search,\r\n    Moon,\r\n    Sun,\r\n    Bell,\r\n    Settings,\r\n    LogOut,\r\n    Building,\r\n    Home,\r\n    Wheat,\r\n    AlertTriangle,\r\n    BarChart3,\r\n    Phone,\r\n    MapPin,\r\n    Target,\r\n    Truck,\r\n    DollarSign\r\n} from 'lucide-react';\r\n\r\nconst RegionDashboard = () => {\r\n    // State management\r\n    const [darkMode, setDarkMode] = useState(false);\r\n    const [activeTab, setActiveTab] = useState('overview');\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n\r\n    // Data states\r\n    const [admins, setAdmins] = useState([]);\r\n    const [farmers, setFarmers] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [requests, setRequests] = useState([]);\r\n    const [reports, setReports] = useState([]);\r\n    const [statistics, setStatistics] = useState({});\r\n    const [myReports, setMyReports] = useState([]);\r\n    const [myProducts, setMyProducts] = useState([]);\r\n    const [otherProducts, setOtherProducts] = useState([]);\r\n\r\n    // Filter states\r\n    const [requestFilter, setRequestFilter] = useState('all');\r\n    const [reportFilter, setReportFilter] = useState('all');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [farmerFilter, setFarmerFilter] = useState('all');\r\n    const [productFilter, setProductFilter] = useState('all');\r\n\r\n    // Modal states\r\n    const [showAdminModal, setShowAdminModal] = useState(false);\r\n    const [showProductModal, setShowProductModal] = useState(false);\r\n    const [showReportModal, setShowReportModal] = useState(false);\r\n    const [showFarmerModal, setShowFarmerModal] = useState(false);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [modalMode, setModalMode] = useState('create');\r\n\r\n    // Form states - FIXED: Added confirmPassword field\r\n    const [adminForm, setAdminForm] = useState({\r\n        fullName: '',\r\n        phoneNumber: '',\r\n        password: '',\r\n        confirmPassword: '', // ADDED THIS FIELD\r\n        role: 'Zone',\r\n        region_name: '',\r\n        zone_name: '',\r\n        woreda_name: '',\r\n        kebele_name: ''\r\n    });\r\n\r\n    const [productForm, setProductForm] = useState({\r\n        name: '',\r\n        category: '',\r\n        sub_category: '',\r\n        price: '',\r\n        amount: '',\r\n        unit: '',\r\n        description: '',\r\n        manufacturer: '',\r\n        expiry_date: ''\r\n    });\r\n\r\n    const [reportForm, setReportForm] = useState({\r\n        reported_admin_id: '',\r\n        report_type: 'Misconduct',\r\n        title: '',\r\n        description: '',\r\n        evidence: '',\r\n        priority: 'Medium'\r\n    });\r\n\r\n    const [farmerForm, setFarmerForm] = useState({\r\n        full_name: '',\r\n        phone_number: '',\r\n        password: '',\r\n        region_name: '',\r\n        zone_name: '',\r\n        woreda_name: '',\r\n        kebele_name: '',\r\n        land_size_hectares: '',\r\n        crop_types: '',\r\n        crops_season: '',\r\n        land_type: '',\r\n        farming_experience: '',\r\n        irrigation_type: '',\r\n        farming_method: '',\r\n        primary_crops: '',\r\n        secondary_crops: '',\r\n        soil_type: '',\r\n        has_livestock: false,\r\n        livestock_types: '',\r\n        annual_income: '',\r\n        education_level: ''\r\n    });\r\n\r\n    // API base URL - FIXED: Correct endpoint structure\r\n    const API_BASE = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n    // Utility function for API calls - FIXED: Proper error handling\r\n    const apiCall = async(endpoint, options = {}) => {\r\n        const token = localStorage.getItem('token');\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`,\r\n                ...options.headers\r\n            },\r\n            ...options\r\n        };\r\n\r\n        if (options.body) {\r\n            config.body = JSON.stringify(options.body);\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE}${endpoint}`, config);\r\n\r\n            if (!response.ok) {\r\n                if (response.status === 401) {\r\n                    handleLogout();\r\n                    throw new Error('Authentication failed. Please login again.');\r\n                }\r\n\r\n                const errorData = await response.json().catch(() => ({}));\r\n                throw new Error(errorData.message || `API call failed with status ${response.status}`);\r\n            }\r\n\r\n            return await response.json();\r\n        } catch (err) {\r\n            console.error('API call error:', err);\r\n            throw new Error(err.message || 'API call failed');\r\n        }\r\n    };\r\n\r\n    // Logout function\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        window.location.href = '/login';\r\n    };\r\n\r\n    // Data fetching functions - FIXED: Correct endpoints\r\n    const fetchAdmins = async() => {\r\n        try {\r\n            const data = await apiCall('/api/admins/admins');\r\n            // Filter to only show Zone admins in the region\r\n            const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n            const regionAdmins = data.filter(admin =>\r\n                admin.role === 'Zone' && admin.region_name === user.region_name\r\n            );\r\n            setAdmins(regionAdmins);\r\n        } catch (err) {\r\n            setError('Failed to fetch admins: ' + err.message);\r\n        }\r\n    };\r\n\r\n    const fetchFarmers = async() => {\r\n        try {\r\n            const data = await apiCall('/api/admins/farmers');\r\n            // Handle both response formats\r\n            const farmersData = data.farmers || data;\r\n            // Filter farmers by region\r\n            const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n            const regionFarmers = farmersData.filter(farmer =>\r\n                farmer.region_name === user.region_name\r\n            );\r\n            setFarmers(regionFarmers);\r\n        } catch (err) {\r\n            setError('Failed to fetch farmers: ' + err.message);\r\n        }\r\n    };\r\n\r\n    const fetchProducts = async() => {\r\n        try {\r\n            const data = await apiCall('/api/admins/getproducts');\r\n            setProducts(data);\r\n        } catch (err) {\r\n            setError('Failed to fetch products: ' + err.message);\r\n        }\r\n    };\r\n\r\n    const fetchMyProducts = async() => {\r\n        try {\r\n            const data = await apiCall('/api/admins/myproducts');\r\n            setMyProducts(data);\r\n        } catch (err) {\r\n            setError('Failed to fetch my products: ' + err.message);\r\n        }\r\n    };\r\n\r\n    const fetchOtherProducts = async() => {\r\n        try {\r\n            const data = await apiCall('/api/admins/otherproducts');\r\n            setOtherProducts(data);\r\n        } catch (err) {\r\n            setError('Failed to fetch other products: ' + err.message);\r\n        }\r\n    };\r\n\r\n    const fetchRequests = async() => {\r\n        try {\r\n            const data = await apiCall('/api/admins/getrequests');\r\n            // Handle both response formats\r\n            const requestsData = data.requests || data;\r\n            // Filter requests by region\r\n            const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n            const regionRequests = requestsData.filter(request =>\r\n                request.region_name === user.region_name\r\n            );\r\n            setRequests(regionRequests);\r\n        } catch (err) {\r\n            setError('Failed to fetch requests: ' + err.message);\r\n        }\r\n    };\r\n\r\n    const fetchReports = async() => {\r\n        try {\r\n            const data = await apiCall('/api/admins/reports');\r\n            setReports(data.reports || data);\r\n        } catch (err) {\r\n            setError('Failed to fetch reports: ' + err.message);\r\n        }\r\n    };\r\n\r\n    const fetchMyReports = async() => {\r\n        try {\r\n            const data = await apiCall('/api/admins/reports/my');\r\n            setMyReports(data.reports || data);\r\n        } catch (err) {\r\n            setError('Failed to fetch my reports: ' + err.message);\r\n        }\r\n    };\r\n\r\n    const fetchStatistics = async() => {\r\n        try {\r\n            const data = await apiCall('/api/admins/reports/statistics');\r\n            setStatistics(data.statistics || data);\r\n        } catch (err) {\r\n            setError('Failed to fetch statistics: ' + err.message);\r\n        }\r\n    };\r\n\r\n    // CRUD operations - FIXED: Proper API endpoints and data formatting\r\n    const createAdmin = async() => {\r\n        try {\r\n            setLoading(true);\r\n\r\n            // Validate password confirmation\r\n            if (adminForm.password !== adminForm.confirmPassword) {\r\n                throw new Error('Password and confirmation do not match');\r\n            }\r\n\r\n            // Prepare data for API\r\n            const adminData = {\r\n                fullName: adminForm.fullName,\r\n                phoneNumber: adminForm.phoneNumber,\r\n                password: adminForm.password,\r\n                role: adminForm.role,\r\n                region_name: adminForm.region_name,\r\n                zone_name: adminForm.zone_name,\r\n                woreda_name: adminForm.woreda_name,\r\n                kebele_name: adminForm.kebele_name\r\n            };\r\n\r\n            await apiCall('/api/admins/register', {\r\n                method: 'POST',\r\n                body: adminData\r\n            });\r\n\r\n            setSuccess('Zone admin created successfully');\r\n            setShowAdminModal(false);\r\n            resetAdminForm();\r\n            fetchAdmins();\r\n        } catch (err) {\r\n            setError('Failed to create admin: ' + err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const updateAdmin = async() => {\r\n        try {\r\n            setLoading(true);\r\n\r\n            // Validate password confirmation if password is being updated\r\n            if (adminForm.password && adminForm.password !== adminForm.confirmPassword) {\r\n                throw new Error('Password and confirmation do not match');\r\n            }\r\n\r\n            // Prepare data for API\r\n            const adminData = {\r\n                fullName: adminForm.fullName,\r\n                phoneNumber: adminForm.phoneNumber,\r\n                ...(adminForm.password && { password: adminForm.password }),\r\n                region_name: adminForm.region_name,\r\n                zone_name: adminForm.zone_name,\r\n                woreda_name: adminForm.woreda_name,\r\n                kebele_name: adminForm.kebele_name\r\n            };\r\n\r\n            await apiCall(`/api/admins/edit/${selectedItem.id}`, {\r\n                method: 'PUT',\r\n                body: adminData\r\n            });\r\n\r\n            setSuccess('Admin updated successfully');\r\n            setShowAdminModal(false);\r\n            resetAdminForm();\r\n            fetchAdmins();\r\n        } catch (err) {\r\n            setError('Failed to update admin: ' + err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const createProduct = async() => {\r\n        try {\r\n            setLoading(true);\r\n\r\n            // Validate required fields\r\n            if (!productForm.name || !productForm.category || !productForm.amount ||\r\n                !productForm.price || !productForm.sub_category || !productForm.unit || !productForm.expiry_date) {\r\n                throw new Error('All required fields must be filled');\r\n            }\r\n\r\n            await apiCall('/api/admins/addproduct', {\r\n                method: 'POST',\r\n                body: productForm\r\n            });\r\n\r\n            setSuccess('Product created successfully');\r\n            setShowProductModal(false);\r\n            resetProductForm();\r\n            fetchProducts();\r\n            fetchMyProducts();\r\n        } catch (err) {\r\n            setError('Failed to create product: ' + err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const updateProduct = async() => {\r\n        try {\r\n            setLoading(true);\r\n            await apiCall(`/api/admins/editproduct/${selectedItem.id}`, {\r\n                method: 'PUT',\r\n                body: productForm\r\n            });\r\n\r\n            setSuccess('Product updated successfully');\r\n            setShowProductModal(false);\r\n            resetProductForm();\r\n            fetchProducts();\r\n            fetchMyProducts();\r\n        } catch (err) {\r\n            setError('Failed to update product: ' + err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const deleteProduct = async(productId) => {\r\n        if (!window.confirm('Are you sure you want to delete this product?')) return;\r\n\r\n        try {\r\n            setLoading(true);\r\n            await apiCall(`/api/admins/deleteproduct/${productId}`, {\r\n                method: 'DELETE'\r\n            });\r\n\r\n            setSuccess('Product deleted successfully');\r\n            fetchProducts();\r\n            fetchMyProducts();\r\n        } catch (err) {\r\n            setError('Failed to delete product: ' + err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Request status update\r\n    const updateRequestStatus = async(requestId, status, feedback = '') => {\r\n        try {\r\n            setLoading(true);\r\n            await apiCall(`/api/admins/editrequest/${requestId}/status`, {\r\n                method: 'PUT',\r\n                body: { status, feedback }\r\n            });\r\n\r\n            setSuccess(`Request ${status.toLowerCase()} successfully`);\r\n            fetchRequests();\r\n        } catch (err) {\r\n            setError('Failed to update request status: ' + err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const deleteRejectedRequest = async(requestId) => {\r\n        if (!window.confirm('Are you sure you want to delete this rejected request?')) return;\r\n\r\n        try {\r\n            setLoading(true);\r\n            await apiCall(`/api/admins/deleterequest/${requestId}`, {\r\n                method: 'DELETE'\r\n            });\r\n\r\n            setSuccess('Rejected request deleted successfully');\r\n            fetchRequests();\r\n        } catch (err) {\r\n            setError('Failed to delete request: ' + err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const createReport = async() => {\r\n        try {\r\n            setLoading(true);\r\n\r\n            // Validate required fields\r\n            if (!reportForm.reported_admin_id || !reportForm.report_type ||\r\n                !reportForm.title || !reportForm.description) {\r\n                throw new Error('Reported admin ID, type, title, and description are required');\r\n            }\r\n\r\n            await apiCall('/api/admins/reports', {\r\n                method: 'POST',\r\n                body: reportForm\r\n            });\r\n\r\n            setSuccess('Report submitted successfully');\r\n            setShowReportModal(false);\r\n            resetReportForm();\r\n            fetchReports();\r\n            fetchMyReports();\r\n        } catch (err) {\r\n            setError('Failed to create report: ' + err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const updateReportStatus = async(reportId, status, resolutionNotes = '') => {\r\n        try {\r\n            setLoading(true);\r\n            await apiCall(`/api/admins/reports/${reportId}/status`, {\r\n                method: 'PUT',\r\n                body: { status, resolution_notes: resolutionNotes }\r\n            });\r\n\r\n            setSuccess('Report status updated successfully');\r\n            fetchReports();\r\n            fetchMyReports();\r\n        } catch (err) {\r\n            setError('Failed to update report status: ' + err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Form reset functions - FIXED: Added confirmPassword field\r\n    const resetAdminForm = () => {\r\n        setAdminForm({\r\n            fullName: '',\r\n            phoneNumber: '',\r\n            password: '',\r\n            confirmPassword: '', // ADDED THIS FIELD\r\n            role: 'Zone',\r\n            region_name: '',\r\n            zone_name: '',\r\n            woreda_name: '',\r\n            kebele_name: ''\r\n        });\r\n    };\r\n\r\n    const resetProductForm = () => {\r\n        setProductForm({\r\n            name: '',\r\n            category: '',\r\n            sub_category: '',\r\n            price: '',\r\n            amount: '',\r\n            unit: '',\r\n            description: '',\r\n            manufacturer: '',\r\n            expiry_date: ''\r\n        });\r\n    };\r\n\r\n    const resetReportForm = () => {\r\n        setReportForm({\r\n            reported_admin_id: '',\r\n            report_type: 'Misconduct',\r\n            title: '',\r\n            description: '',\r\n            evidence: '',\r\n            priority: 'Medium'\r\n        });\r\n    };\r\n\r\n    const resetFarmerForm = () => {\r\n        setFarmerForm({\r\n            full_name: '',\r\n            phone_number: '',\r\n            password: '',\r\n            region_name: '',\r\n            zone_name: '',\r\n            woreda_name: '',\r\n            kebele_name: '',\r\n            land_size_hectares: '',\r\n            crop_types: '',\r\n            crops_season: '',\r\n            land_type: '',\r\n            farming_experience: '',\r\n            irrigation_type: '',\r\n            farming_method: '',\r\n            primary_crops: '',\r\n            secondary_crops: '',\r\n            soil_type: '',\r\n            has_livestock: false,\r\n            livestock_types: '',\r\n            annual_income: '',\r\n            education_level: ''\r\n        });\r\n    };\r\n\r\n    // Modal functions - FIXED: Proper form population\r\n    const openAdminModal = (mode, admin = null) => {\r\n        setModalMode(mode);\r\n        setSelectedItem(admin);\r\n        if (admin && mode === 'edit') {\r\n            setAdminForm({\r\n                fullName: admin.full_name || '',\r\n                phoneNumber: admin.phone_number || '',\r\n                password: '',\r\n                confirmPassword: '', // ADDED THIS FIELD\r\n                role: admin.role || 'Zone',\r\n                region_name: admin.region_name || '',\r\n                zone_name: admin.zone_name || '',\r\n                woreda_name: admin.woreda_name || '',\r\n                kebele_name: admin.kebele_name || ''\r\n            });\r\n        } else {\r\n            resetAdminForm();\r\n        }\r\n        setShowAdminModal(true);\r\n    };\r\n\r\n    const openProductModal = (mode, product = null) => {\r\n        setModalMode(mode);\r\n        setSelectedItem(product);\r\n        if (product && mode === 'edit') {\r\n            setProductForm({\r\n                name: product.name || '',\r\n                category: product.category || '',\r\n                sub_category: product.sub_category || '',\r\n                price: product.price || '',\r\n                amount: product.amount || '',\r\n                unit: product.unit || '',\r\n                description: product.description || '',\r\n                manufacturer: product.manufacturer || '',\r\n                expiry_date: product.expiry_date || ''\r\n            });\r\n        } else {\r\n            resetProductForm();\r\n        }\r\n        setShowProductModal(true);\r\n    };\r\n\r\n    const openReportModal = (mode, report = null) => {\r\n        setModalMode(mode);\r\n        setSelectedItem(report);\r\n        if (report && mode === 'edit') {\r\n            setReportForm({\r\n                reported_admin_id: report.reported_admin_id || '',\r\n                report_type: report.report_type || 'Misconduct',\r\n                title: report.title || '',\r\n                description: report.description || '',\r\n                evidence: report.evidence || '',\r\n                priority: report.priority || 'Medium'\r\n            });\r\n        } else {\r\n            resetReportForm();\r\n        }\r\n        setShowReportModal(true);\r\n    };\r\n\r\n    const openFarmerModal = (mode, farmer = null) => {\r\n        setModalMode(mode);\r\n        setSelectedItem(farmer);\r\n        if (farmer && mode === 'edit') {\r\n            setFarmerForm({\r\n                full_name: farmer.full_name || '',\r\n                phone_number: farmer.phone_number || '',\r\n                password: '',\r\n                region_name: farmer.region_name || '',\r\n                zone_name: farmer.zone_name || '',\r\n                woreda_name: farmer.woreda_name || '',\r\n                kebele_name: farmer.kebele_name || '',\r\n                land_size_hectares: farmer.land_size_hectares || '',\r\n                crop_types: farmer.crop_types || '',\r\n                crops_season: farmer.crops_season || '',\r\n                land_type: farmer.land_type || '',\r\n                farming_experience: farmer.farming_experience || '',\r\n                irrigation_type: farmer.irrigation_type || '',\r\n                farming_method: farmer.farming_method || '',\r\n                primary_crops: farmer.primary_crops || '',\r\n                secondary_crops: farmer.secondary_crops || '',\r\n                soil_type: farmer.soil_type || '',\r\n                has_livestock: farmer.has_livestock || false,\r\n                livestock_types: farmer.livestock_types || '',\r\n                annual_income: farmer.annual_income || '',\r\n                education_level: farmer.education_level || ''\r\n            });\r\n        } else {\r\n            resetFarmerForm();\r\n        }\r\n        setShowFarmerModal(true);\r\n    };\r\n\r\n    // Filter functions\r\n    const filteredRequests = requests.filter(request => {\r\n        const matchesSearch = (request.farmer_name && request.farmer_name.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n            (request.product_name && request.product_name.toLowerCase().includes(searchTerm.toLowerCase()));\r\n        const matchesFilter = requestFilter === 'all' ||\r\n            (request.status && request.status.toLowerCase().includes(requestFilter.toLowerCase()));\r\n        return matchesSearch && matchesFilter;\r\n    });\r\n\r\n    const filteredFarmers = farmers.filter(farmer => {\r\n        const matchesSearch = (farmer.full_name && farmer.full_name.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n            (farmer.phone_number && farmer.phone_number.includes(searchTerm));\r\n        const matchesFilter = farmerFilter === 'all' ||\r\n            (farmer.zone_name && farmer.zone_name.toLowerCase().includes(farmerFilter.toLowerCase()));\r\n        return matchesSearch && matchesFilter;\r\n    });\r\n\r\n    const filteredProducts = products.filter(product => {\r\n        const matchesSearch = (product.name && product.name.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n            (product.category && product.category.toLowerCase().includes(searchTerm.toLowerCase()));\r\n        const matchesFilter = productFilter === 'all' ||\r\n            (product.category && product.category.toLowerCase().includes(productFilter.toLowerCase()));\r\n        return matchesSearch && matchesFilter;\r\n    });\r\n\r\n    const filteredReports = reports.filter(report => {\r\n        const matchesSearch = (report.title && report.title.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n            (report.description && report.description.toLowerCase().includes(searchTerm.toLowerCase()));\r\n        const matchesFilter = reportFilter === 'all' ||\r\n            (report.status && report.status.toLowerCase().includes(reportFilter.toLowerCase()));\r\n        return matchesSearch && matchesFilter;\r\n    });\r\n\r\n    // Fetch all data on component mount\r\n    useEffect(() => {\r\n        const fetchEverything = async() => {\r\n            try {\r\n                await Promise.all([\r\n                    fetchAdmins(),\r\n                    fetchFarmers(),\r\n                    fetchProducts(),\r\n                    fetchMyProducts(),\r\n                    fetchOtherProducts(),\r\n                    fetchRequests(),\r\n                    fetchReports(),\r\n                    fetchMyReports(),\r\n                    fetchStatistics()\r\n                ]);\r\n            } catch (err) {\r\n                setError('Failed to fetch data: ' + err.message);\r\n            }\r\n        };\r\n\r\n        fetchEverything();\r\n    }, []);\r\n\r\n    // Clear messages after 5 seconds\r\n    useEffect(() => {\r\n        if (error || success) {\r\n            const timer = setTimeout(() => {\r\n                setError('');\r\n                setSuccess('');\r\n            }, 5000);\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [error, success]);\r\n\r\n    // FIXED: Main UI with proper functionality\r\n    return ( <\r\n        div className = { `min-h-screen ${darkMode ? 'bg-gray-900' : 'bg-gray-50'}` } > { /* ... (rest of your JSX remains the same, but make sure to update form fields) ... */ }\r\n\r\n        { /* Admin Modal - FIXED: Added confirmPassword field */ } {\r\n            showAdminModal && ( <\r\n                div className = \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\" >\r\n                <\r\n                div className = { `w-full max-w-md p-6 rounded-lg shadow-lg ${darkMode ? 'bg-gray-800' : 'bg-white'}` } >\r\n                <\r\n                h3 className = { `text-lg font-semibold mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}` } > { modalMode === 'create' ? 'Add Zone Admin' : modalMode === 'edit' ? 'Edit Admin' : 'Admin Details' } <\r\n                /h3>\r\n\r\n                <\r\n                div className = \"space-y-4\" >\r\n                <\r\n                div >\r\n                <\r\n                label className = { `block text-sm font-medium mb-1 ${darkMode ? 'text-gray-300' : 'text-gray-700'}` } >\r\n                Full Name <\r\n                /label> <\r\n                input type = \"text\"\r\n                value = { adminForm.fullName }\r\n                onChange = {\r\n                    (e) => setAdminForm({...adminForm, fullName: e.target.value }) }\r\n                disabled = { modalMode === 'view' }\r\n                className = { `w-full px-3 py-2 rounded-lg border ${\r\n                                        darkMode \r\n                                            ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400' \r\n                                            : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500'\r\n                                    }` }\r\n                /> <\r\n                /div>\r\n\r\n                <\r\n                div >\r\n                <\r\n                label className = { `block text-sm font-medium mb-1 ${darkMode ? 'text-gray-300' : 'text-gray-700'}` } >\r\n                Phone Number <\r\n                /label> <\r\n                input type = \"text\"\r\n                value = { adminForm.phoneNumber }\r\n                onChange = {\r\n                    (e) => setAdminForm({...adminForm, phoneNumber: e.target.value }) }\r\n                disabled = { modalMode === 'view' }\r\n                className = { `w-full px-3 py-2 rounded-lg border ${\r\n                                        darkMode \r\n                                            ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400' \r\n                                            : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500'\r\n                                    }` }\r\n                /> <\r\n                /div>\r\n\r\n                {\r\n                    modalMode !== 'view' && ( <\r\n                        >\r\n                        <\r\n                        div >\r\n                        <\r\n                        label className = { `block text-sm font-medium mb-1 ${darkMode ? 'text-gray-300' : 'text-gray-700'}` } >\r\n                        Password <\r\n                        /label> <\r\n                        input type = \"password\"\r\n                        value = { adminForm.password }\r\n                        onChange = {\r\n                            (e) => setAdminForm({...adminForm, password: e.target.value }) }\r\n                        className = { `w-full px-3 py-2 rounded-lg border ${\r\n                                                darkMode \r\n                                                    ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400' \r\n                                                    : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500'\r\n                                            }` }\r\n                        /> <\r\n                        /div>\r\n\r\n                        <\r\n                        div >\r\n                        <\r\n                        label className = { `block text-sm font-medium mb-1 ${darkMode ? 'text-gray-300' : 'text-gray-700'}` } >\r\n                        Confirm Password <\r\n                        /label> <\r\n                        input type = \"password\"\r\n                        value = { adminForm.confirmPassword }\r\n                        onChange = {\r\n                            (e) => setAdminForm({...adminForm, confirmPassword: e.target.value }) }\r\n                        className = { `w-full px-3 py-2 rounded-lg border ${\r\n                                                darkMode \r\n                                                    ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400' \r\n                                                    : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500'\r\n                                            }` }\r\n                        /> <\r\n                        /div> <\r\n                        />\r\n                    )\r\n                }\r\n\r\n                <\r\n                div >\r\n                <\r\n                label className = { `block text-sm font-medium mb-1 ${darkMode ? 'text-gray-300' : 'text-gray-700'}` } >\r\n                Zone <\r\n                /label> <\r\n                input type = \"text\"\r\n                value = { adminForm.zone_name }\r\n                onChange = {\r\n                    (e) => setAdminForm({...adminForm, zone_name: e.target.value }) }\r\n                disabled = { modalMode === 'view' }\r\n                className = { `w-full px-3 py-2 rounded-lg border ${\r\n                                        darkMode \r\n                                            ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400' \r\n                                            : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500'\r\n                                    }` }\r\n                /> <\r\n                /div> <\r\n                /div>\r\n\r\n                <\r\n                div className = \"flex justify-end gap-3 mt-6\" >\r\n                <\r\n                button onClick = {\r\n                    () => setShowAdminModal(false) }\r\n                className = { `px-4 py-2 rounded-lg ${\r\n                                    darkMode \r\n                                        ? 'bg-gray-600 text-white hover:bg-gray-700' \r\n                                        : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n                                }` } >\r\n                Cancel <\r\n                /button> {\r\n                    modalMode !== 'view' && ( <\r\n                        button onClick = { modalMode === 'create' ? createAdmin : updateAdmin }\r\n                        disabled = { loading }\r\n                        className = \"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg disabled:opacity-50\" >\r\n                        { loading ? 'Saving...' : modalMode === 'create' ? 'Create Admin' : 'Update Admin' } <\r\n                        /button>\r\n                    )\r\n                } <\r\n                /div> <\r\n                /div> <\r\n                /div>\r\n            )\r\n        }\r\n\r\n        { /* ... (rest of your modals and JSX) ... */ } <\r\n        /div>\r\n    );\r\n};\r\n\r\nexport default RegionDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}